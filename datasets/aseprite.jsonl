{"instruction":"Active site (active image, layer, frame, sprite, etc.).","output":"app.site","source":"docs","sourceUrl":"https://www.aseprite.org/api/app#appsite","user":"dev"}
{"instruction":"Range member represents the active selection from an objects collection. It returns a sorted list of selected frames, or cels, or layers, or colors, etc.","output":"app.range","source":"docs","sourceUrl":"https://www.aseprite.org/api/app#apprange","user":"dev"}
{"instruction":"Gets or sets the active Cel object.","output":"app.cel","source":"docs","sourceUrl":"https://www.aseprite.org/api/app#appcel","user":"dev"}
{"instruction":"Returns a Frame object that represents the active frame in the focused sprite editor. You can set this property assigning a frame number directly to jump to another frame.\n\nTo known the active frame number use app.frame.frameNumber","output":"local frame = app.frame\nassert(frame.sprite == app.sprite)\napp.frame = app.sprite.frames[2]\n\napp.frame = 3\napp.frame = 1","source":"docs","sourceUrl":"https://www.aseprite.org/api/app#appframe","user":"dev"}
{"instruction":"Returns the active image, an Image object.","output":"local image = app.image","source":"docs","sourceUrl":"https://www.aseprite.org/api/app#appimage","user":"dev"}
{"instruction":"Returns the active layer, a Layer object.","output":"app.layer","source":"docs","sourceUrl":"https://www.aseprite.org/api/app#applayer","user":"dev"}
{"instruction":"Returns the active sprite, a Sprite object.","output":"local sprite = app.sprite","source":"docs","sourceUrl":"https://www.aseprite.org/api/app#appsprite","user":"dev"}
{"instruction":"Returns the active tag, which is the tag located at the active frame.","output":"app.tag","source":"docs","sourceUrl":"https://www.aseprite.org/api/app#apptag","user":"dev"}
{"instruction":"Returns the active tool (a Tool object) selected in the tool bar.","output":"app.tool","source":"docs","sourceUrl":"https://www.aseprite.org/api/app#apptool","user":"dev"}
{"instruction":"Returns the active brush (a Brush object) selected in the context bar.","output":"app.brush","source":"docs","sourceUrl":"https://www.aseprite.org/api/app#appbrush","user":"dev"}
{"instruction":"Returns the active editor (a Editor object).","output":"app.editor","source":"docs","sourceUrl":"https://www.aseprite.org/api/app#appeditor","user":"dev"}
{"instruction":"Returns the main window (a Window object).","output":"app.window","source":"docs","sourceUrl":"https://www.aseprite.org/api/app#appwindow","user":"dev"}
{"instruction":"This pixelColor namespace contains internal functions to handle color at the lowest level.","output":"app.pixelColor","source":"docs","sourceUrl":"https://www.aseprite.org/api/app#apppixelcolor","user":"dev"}
{"instruction":"Returns the Aseprite version number as a Version object (e.g. Version(\"1.2.10-beta1\")).","output":"app.version","source":"docs","sourceUrl":"https://www.aseprite.org/api/app#appversion","user":"dev"}
{"instruction":"Returns the API version. See the changes file between version to know what offer each API version.","output":"app.apiVersion","source":"docs","sourceUrl":"https://www.aseprite.org/api/app#appapiversion","user":"dev"}
{"instruction":"Gets or sets the current foreground color.","output":"app.fgColor","source":"docs","sourceUrl":"https://www.aseprite.org/api/app#appfgcolor","user":"dev"}
{"instruction":"Gets or sets the current background color. Remember that some commands use the background color to clear the active layer.","output":"app.bgColor","source":"docs","sourceUrl":"https://www.aseprite.org/api/app#appbgcolor","user":"dev"}
{"instruction":"Returns true if the UI is available. E.g. if this is true you can use app.alert or dialogs. The UI is not available when we run in --batch mode.","output":"app.isUIAvailable","source":"docs","sourceUrl":"https://www.aseprite.org/api/app#appisuiavailable","user":"dev"}
{"instruction":"Returns an array of sprites.","output":"for i,sprite in ipairs(app.sprites) do\n  -- do something with each sprite...\nend","source":"docs","sourceUrl":"https://www.aseprite.org/api/app#appsprites","user":"dev"}
{"instruction":"This is a table with parameters specified as --script-param key=value in the CLI or as \u003cparam\u003e in user.aseprite-keys or gui.xml file.","output":"app.params","source":"docs","sourceUrl":"https://www.aseprite.org/api/app#appparams","user":"dev"}
{"instruction":"Shows an alert message. If buttons are not specified, it will show a message box with the OK button only.","output":"app.alert \"Text\"\napp.alert(\"Text\")\napp.alert{title=\"Title\", text=\"Text\", buttons=\"OK\"}\napp.alert{title=\"Title\", text=\"Text\", buttons={\"OK\", \"Cancel\"}}\napp.alert{title=\"Title\", text={\"Line 1\", \"Line 2\", ...}, buttons={\"Yes\", \"No\", \"Cancel\", ...}}","source":"docs","sourceUrl":"https://www.aseprite.org/api/app#appalert","user":"dev"}
{"instruction":"Opens a new sprite loading it from the given filename. Returns an instance of the Sprite class or nil if something went wrong.","output":"app.open(filename)","source":"docs","sourceUrl":"https://www.aseprite.org/api/app#appopen","user":"dev"}
{"instruction":"Closes the application. It's like clicking File \u003e Exit menu option.","output":"app.exit()","source":"docs","sourceUrl":"https://www.aseprite.org/api/app#appexit","user":"dev"}
{"instruction":"Creates a new transaction so you can group several sprite modifications in just one undo/redo operation. If a string is given as first argument, that string will be used as the label of this undo/redo action (which can be seen in the Edit \u003e Undo History window).\n\nThe given function is called inside the transaction, if the function fails, the whole transaction is undone (i.e. all the steps executed so far will be reversed). If the function successes, the transaction is committed and then all actions will be grouped in just one undo/redo operation.","output":"app.transaction(\n  function()\n    ...\n  end)\n\napp.transaction(\n  string,\n  function()\n    ...\n  end)","source":"docs","sourceUrl":"https://www.aseprite.org/api/app#apptransaction","user":"dev"}
{"instruction":"Check the app.command documentation.","output":"app.command","source":"docs","sourceUrl":"https://www.aseprite.org/api/app#appcommand","user":"dev"}
{"instruction":"Check the app.preferences documentation.","output":"app.preferences","source":"docs","sourceUrl":"https://www.aseprite.org/api/app#apppreferences","user":"dev"}
{"instruction":"Check the app.fs documentation.","output":"app.fs","source":"docs","sourceUrl":"https://www.aseprite.org/api/app#appfs","user":"dev"}
{"instruction":"Check the app.theme documentation.","output":"app.theme","source":"docs","sourceUrl":"https://www.aseprite.org/api/app#apptheme","user":"dev"}
{"instruction":"Check the app.os documentation.","output":"app.os","source":"docs","sourceUrl":"https://www.aseprite.org/api/app#appos","user":"dev"}
{"instruction":"Returns the UI Elements Scaling value specified in Edit \u003e Preferences as an scale factor (1 for 100%, 2 for 200%, etc.)","output":"local scale = app.uiScale","source":"docs","sourceUrl":"https://www.aseprite.org/api/app#appuiscale","user":"dev"}
{"instruction":"This function is available just in case you see that your script updates the sprite but the screen is not showing the updated state of the sprite. It should not be needed, but it's here just in case that something is not working right on the Aseprite side.","output":"app.refresh()","source":"docs","sourceUrl":"https://www.aseprite.org/api/app#apprefresh","user":"dev"}
{"instruction":"Undoes the latest operation in the active sprite. It's like calling app.command.Undo() (the Edit \u003e Undo menu option).","output":"app.undo()","source":"docs","sourceUrl":"https://www.aseprite.org/api/app#appundo","user":"dev"}
{"instruction":"Redoes the latest undone operation in the active sprite. It's like calling app.command.Redo() (the Edit \u003e Redo menu option).","output":"app.redo()","source":"docs","sourceUrl":"https://www.aseprite.org/api/app#appredo","user":"dev"}
{"instruction":"Simulates an user stroke in the canvas using the given tool.\n\ntool: A string with a well known tool ID (rectangular_marquee, elliptical_marquee, lasso, polygonal_lasso, magic_wand, pencil, spray, eraser, eyedropper, zoom, hand, move, slice, paint_bucket, gradient, line, curve, rectangle, filled_rectangle, ellipse, filled_ellipse, contour, polygon, blur, jumble) or a tool object\ncolor: A color object to draw with the given tool\nbrush: A brush object to draw the points\npoints: An array of points in the sprite canvas which simulate the position of where the user put the mouse to draw with the given tool.\nselection: What to do with the selection, only for selection-like tools (rectangular_marquee, magic_wand, etc.). The default value when the UI is enabled will be app.preferences.selection.mode, in CLI mode it's SelectionMode.REPLACE.\nAnd we can specify the cel or layer/frame where to draw:\ncel: The specific cel where we want to use the tool/draw with the tool (by default app.cel)\nlayer: The layer where we want to use the tool/draw with the tool (by default app.layer)\nframe: The frame where to draw (by default app.frame)","output":"app.useTool{\n tool=string,\n color=Color,\n bgColor=Color,\n brush=Brush,\n points={ Point, Point, .... },\n cel=Cel,\n layer=Layer,\n frame=Frame,\n ink=Ink,\n button=MouseButton.LEFT | MouseButton.RIGHT,\n opacity=integer,\n contiguous=false | true,\n tolerance=integer,\n freehandAlgorithm=0 | 1,\n selection=SelectionMode.REPLACE | SelectionMode.ADD | SelectionMode.SUBTRACT | SelectionMode.INTERSECT,\n tilemapMode=TilemapMode.PIXELS | TilemapMode.TILES,\n tilesetMode=TilesetMode.MANUAL | TilesetMode.AUTO | TilesetMode.STACK,\n}","source":"docs","sourceUrl":"https://www.aseprite.org/api/app#appusetool","user":"dev"}
{"instruction":"Returns the Events object to associate functions that can act like listeners of specific app events.\n\nAvailable events for app:\n\n'sitechange': When the user selects other sprite, layer, or frame.\n'fgcolorchange': When the Foreground color in the color bar is changed.\n'bgcolorchange': When the Background color in the color bar is changed.\n'beforecommand': Before executing any command in the program.\n'aftercommand': After executing any command in the program.\nThe 'beforecommand' and 'aftercommand' events receive an ev argument with the name of the command (ev.name) and the params (ev.params). 'beforecommand' includes a ev.stopPropagation() function to cancel the event, e.g. in case that you've handled the event in a custom way.","output":"app.events:on('sitechange',\n  function()\n    print('Now we are located in other sprite, layer, or frame')\n  end)","source":"docs","sourceUrl":"https://www.aseprite.org/api/app#appevents","user":"dev"}
{"instruction":"Executes the given command named CommandName with the given parameters.\n\napp.command.About\napp.command.AddColor\napp.command.AdvancedMode\napp.command.AutocropSprite\napp.command.BackgroundFromLayer\napp.command.BrightnessContrast\napp.command.Cancel\napp.command.CanvasSize\napp.command.CelOpacity\napp.command.CelProperties\napp.command.ChangeBrush\napp.command.ChangeColor\napp.command.ChangePixelFormat\napp.command.ClearCel\napp.command.Clear\napp.command.CloseAllFiles\napp.command.CloseFile\napp.command.ColorCurve\napp.command.ColorQuantization\napp.command.ContiguousFill\napp.command.ConvolutionMatrix\napp.command.CopyCel\napp.command.CopyColors\napp.command.CopyMerged\napp.command.Copy\napp.command.CropSprite\napp.command.Cut\napp.command.DeselectMask\napp.command.Despeckle\napp.command.DeveloperConsole\napp.command.DiscardBrush\napp.command.DuplicateLayer\napp.command.DuplicateSprite\napp.command.DuplicateView\napp.command.Exit\napp.command.ExportSpriteSheet\napp.command.ExportTileset\napp.command.Eyedropper\napp.command.Fill\napp.command.FitScreen\napp.command.FlattenLayers\napp.command.Flip\napp.command.FrameProperties\napp.command.FrameTagProperties\napp.command.FullscreenPreview\napp.command.GotoFirstFrameInTag\napp.command.GotoFirstFrame\napp.command.GotoFrame\napp.command.GotoLastFrameInTag\napp.command.GotoLastFrame\napp.command.GotoNextFrameWithSameTag\napp.command.GotoNextFrame\napp.command.GotoNextLayer\napp.command.GotoNextTab\napp.command.GotoPreviousFrameWithSameTag\napp.command.GotoPreviousFrame\napp.command.GotoPreviousLayer\napp.command.GotoPreviousTab\napp.command.GridSettings\napp.command.Home\napp.command.HueSaturation\napp.command.ImportSpriteSheet\napp.command.InvertColor\napp.command.InvertMask\napp.command.KeyboardShortcuts\napp.command.Launch\napp.command.LayerFromBackground\napp.command.LayerLock\napp.command.LayerOpacity\napp.command.LayerProperties\napp.command.LayerVisibility\napp.command.LinkCels\napp.command.LoadMask\napp.command.LoadPalette\napp.command.MaskAll\napp.command.MaskByColor\napp.command.MaskContent\napp.command.MergeDownLayer\napp.command.ModifySelection\napp.command.MoveCel\napp.command.MoveColors\napp.command.MoveMask\napp.command.NewBrush\napp.command.NewFile\napp.command.NewFrameTag\napp.command.NewFrame\napp.command.NewLayer\napp.command.NewSpriteFromSelection\napp.command.OpenBrowser\napp.command.OpenFile\napp.command.OpenGroup\napp.command.OpenInFolder\napp.command.OpenScriptFolder\napp.command.OpenWithApp\napp.command.Options\napp.command.Outline\napp.command.PaletteEditor\napp.command.PaletteSize\napp.command.PasteText\napp.command.Paste\napp.command.PixelPerfectMode\napp.command.PlayAnimation\napp.command.PlayPreviewAnimation\napp.command.Redo\napp.command.Refresh\napp.command.RemoveFrameTag\napp.command.RemoveFrame\napp.command.RemoveLayer\napp.command.RemoveSlice\napp.command.RepeatLastExport\napp.command.ReplaceColor\napp.command.ReselectMask\napp.command.ReverseFrames\napp.command.Rotate\napp.command.RunScript\napp.command.SaveFile\napp.command.SaveFileAs\napp.command.SaveFileCopyAs\napp.command.SaveMask\napp.command.SavePalette\napp.command.ScrollCenter\napp.command.Scroll\napp.command.SelectTile\napp.command.SelectionAsGrid\napp.command.SetColorSelector\napp.command.SetInkType\napp.command.SetLoopSection\napp.command.SetPaletteEntrySize\napp.command.SetPalette\napp.command.SetSameInk\napp.command.ShowAutoGuides\napp.command.ShowBrushPreview\napp.command.ShowExtras\napp.command.ShowGrid\napp.command.ShowLayerEdges\napp.command.ShowOnionSkin\napp.command.ShowPixelGrid\napp.command.ShowSelectionEdges\napp.command.ShowSlices\napp.command.SliceProperties\napp.command.SnapToGrid\napp.command.SpriteProperties\napp.command.SpriteSize\napp.command.Stroke\napp.command.SwitchColors\napp.command.SymmetryMode\napp.command.TiledMode\napp.command.Timeline\napp.command.TogglePreview\napp.command.ToggleTimelineThumbnails\napp.command.UndoHistory\napp.command.Undo\napp.command.UnlinkCel\napp.command.Zoom","output":"app.command.CommandName()\napp.command.CommandName { param1=value1, param2=value2, ... }","source":"docs","sourceUrl":"https://www.aseprite.org/api/app_command#appcommand","user":"dev"}
{"instruction":"Adds a new color into the palette.\n\nsource: Can be \"fg\", \"bg\", or \"color\" (default). To add the foreground, background, or a specific color respectively.\ncolor: A Color instance to add too the palette.","output":"app.command.AddColor {\n  source=string,\n  color=Color\n}","source":"docs","sourceUrl":"https://www.aseprite.org/api/command/AddColor#addcolor","user":"dev"}
{"instruction":"Adds a new color into the palette.\n\nsource: Can be \"fg\", \"bg\", or \"color\" (default). To add the foreground, background, or a specific color respectively.\ncolor: A Color instance to add too the palette.","output":"app.command.AddColor {\n  color=Color(255, 0, 0)\n}\n\napp.command.AddColor {\n  source=\"fg\"\n}","source":"docs","sourceUrl":"https://www.aseprite.org/api/command/AddColor#example","user":"user"}
{"instruction":"ui: Shows the dialog on the screen, true by default. Set to false for automatic change brightness and/or contrast without asking to the user for the change.\nchannels: A combination of FilterChannels with bitwise OR (|) operator. By default it is equal to: FilterChannels.RED | FilterChannels.GREEN | FilterChannels.BLUE | FilterChannels.GRAY.\nbrightness: Brightness factor (0 by default), a value between -100 and 100.\ncontrast: Contrast factor (0 by default), a value between -100 and 100.","output":"app.command.BrightnessContrast {\n  ui=true,\n  channels=FilterChannels...,\n  brightness=0,\n  contrast=0\n}","source":"docs","sourceUrl":"https://www.aseprite.org/api/command/BrightnessContrast#brightnesscontrast","user":"dev"}
{"instruction":"ui: false if you don't need to show the dialog to the user.\nleft/top/right/bottom: How many pixels to add, or remove if the value is negative, to/from left/top/right/bottom sides.\nbounds: A new rectangle with the new bounds of the canvas. If you use this argument, left/top/right/bottom are ignored.\ntrimOutside: True if you want to delete all the pixel content of cels that will be outside the canvas after the canvas size is modified.","output":"app.command.CanvasSize {\n  ui=true,\n  left=0,\n  top=0,\n  right=0,\n  bottom=0,\n  bounds=Rectangle,\n  trimOutside=false\n}","source":"docs","sourceUrl":"https://www.aseprite.org/api/command/CanvasSize#canvassize","user":"dev"}
{"instruction":"Add 8 pixels at the left side","output":"app.command.CanvasSize { ui=false, left=8 }","source":"docs","sourceUrl":"https://www.aseprite.org/api/command/CanvasSize#canvassize","user":"user"}
{"instruction":"Add 8 pixels to the left and 8 pixels to the right (new width = old width + 16 pixels)","output":"local r = app.sprite.bounds\nr.x = r.x-8\nr.width = r.width+16\napp.command.CanvasSize { ui=false, bounds=r }","source":"docs","sourceUrl":"https://www.aseprite.org/api/command/CanvasSize#canvassize","user":"user"}
{"instruction":"Changes the opacity of the active Cel.\n\nopacity: From 0 to 255","output":"app.command.CelOpacity {\n    opacity = 0\n}","source":"docs","sourceUrl":"https://www.aseprite.org/api/command/CelOpacity#celopacity","user":"dev"}
{"instruction":"Changes the ColorMode of the active sprite\n\nformat: Can be \"rgb\", \"gray\", or \"indexed\".\ndithering: Can be \"ordered\", \"old\" \"error-diffusion\", or empty.\ndithering-matrix: It can be \"bayer8x8\", \"bayer4x4\", or \"bayer2x2\" (when When dithering is ordered or old). Actually it can be a matrix ID from any extensions (for example).\nrgmap: \"octree\", \"rgb5a3\", or \"default\" (generally default will be octree, but it might change in the future). If nothing is specified the default configured quantization method from prefereces will be used if the GUI is enabled.\ntoGray: \"luma\", \"hsv\", or \"hsl\".","output":"app.command.ChangePixelFormat {\n  format=string,\n  dithering=string,\n  [\"dithering-matrix\"]=string,\n  rgbmap=string,\n  toGray=string\n}","source":"docs","sourceUrl":"https://www.aseprite.org/api/command/ChangePixelFormat#changepixelformat","user":"dev"}
{"instruction":"Change pixel format to indexed","output":"app.command.ChangePixelFormat {\n  format=\"indexed\"\n}","source":"docs","sourceUrl":"https://www.aseprite.org/api/command/ChangePixelFormat#example","user":"user"}
{"instruction":"ui: Shows the dialog on the screen, true by default. Set to false to apply the color curve filter automatically without asking to the user for the change.\nchannels: A combination of FilterChannels with bitwise OR (|) operator. By default it is equal to: FilterChannels.RED | FilterChannels.GREEN | FilterChannels.BLUE | FilterChannels.GRAY.\ncurve: Array of points where X is the input value and Y the output value.","output":"app.command.ColorCurve {\n  ui=true,\n  channels=FilterChannels...,\n  curve={ Point, Point, Point... }\n}","source":"docs","sourceUrl":"https://www.aseprite.org/api/command/ColorCurve#colorcurve","user":"dev"}
{"instruction":"Change color curve to red","output":"app.command.ColorCurve {\n  ui=true,\n  channels=FilterChannels.RED,\n  curve={ { 0, 0 }, { 255, 128 } }\n}","source":"dev","sourceUrl":"https://www.aseprite.org/api/command/ColorCurve#example","user":"user"}
{"instruction":"ui: Shows the dialog on the screen, true by default. Set to false to apply the convolution matrix filter automatically without asking to the user for the change.\nchannels: A combination of FilterChannels with bitwise OR (|) operator. By default it is equal to: FilterChannels.RED | FilterChannels.GREEN | FilterChannels.BLUE | FilterChannels.GRAY.\ntiledMode: 'none', 'x', 'y', 'both'. By default it's 'none' if there is no UI, or it's equal to app.preferences.document(app.sprite).tiled.mode when ui is true.\nfromResource: Name of pre-defined convolution matrix.\nNote: In future versions this function should support creating customized convolution matrices.","output":"app.command.ConvolutionMatrix {\n  ui=true,\n  channels=FilterChannels...,\n  tiledMode=none,\n  fromResource=string\n}","source":"docs","sourceUrl":"https://www.aseprite.org/api/command/ConvolutionMatrix#convolutionmatrix","user":"dev"}
{"instruction":"Copies the range selected colors app.range.colors before the given colorIndex.","output":"app.command.CopyColors {\n  before=colorIndex\n}","source":"docs","sourceUrl":"https://www.aseprite.org/api/command/CopyColors#copycolors","user":"dev"}
{"instruction":"ui: Show the dialog on the screen, true by default.\nchannels: A combination of FilterChannels with bitwise OR (|) operator. By default it is equal to: FilterChannels.RED | FilterChannels.GREEN | FilterChannels.BLUE | FilterChannels.GRAY.\nwidth: Width of the convolution matrix to calculate the median. 3 by default.\nheight: Height of the convolution matrix to calculate the median. 3 by default.\ntiledMode: 'none', 'x', 'y', 'both'. By default it's 'none' if there is no UI, or it's equal to app.preferences.document(app.sprite).tiled.mode when ui is true.","output":"app.command.Despeckle {\n  ui=true,\n  channels=...,\n  width=3,\n  height=3,\n  tiledMode=none,\n}","source":"docs","sourceUrl":"https://www.aseprite.org/api/command/Despeckle#despeckle","user":"dev"}
{"instruction":"This is similar to using the -sheet argument from the CLI.\n\nui: Shows the dialog to export the sprite sheet.\nrecent: Only available since v1.3.7, it adds the output file (textureFilename) to the list of recent files. By default, if it's not specified, it depends on the ui parameter: if the Export Sprite Sheet dialog is displayed, the selected output filename will be added to the recent list.\naskOverwrite\ntype (SpriteSheetType)\ncolumns\nrows\nwidth\nheight\nbestFit=false\ntextureFilename\ndataFilename\ndataFormat (SpriteSheetDataFormat)\nfilenameFormat\nborderPadding\nshapePadding\ninnerPadding\ntrimSprite\ntrim\ntrimByGrid\nextrude\nignoreEmpty\nmergeDuplicates\nopenGenerated\nlayer\ntag\nsplitLayers\nsplitTags\nsplitGrid: Only available since v1.3-beta21\nlistLayers\nlistTags\nlistSlices\nfromTilesets: Only available since v1.3-beta21, export tileset, like ExportTileset","output":"app.command.ExportSpriteSheet {\n  ui=true,\n  recent=true,\n  askOverwrite=true,\n  type=SpriteSheetType.HORIZONTAL,\n  columns=0,\n  rows=0,\n  width=0,\n  height=0,\n  bestFit=false,\n  textureFilename=\"\",\n  dataFilename=\"\",\n  dataFormat=SpriteSheetDataFormat.JSON_HASH,\n  filenameFormat=\"{title} ({layer}) {frame}.{extension}\",\n  borderPadding=0,\n  shapePadding=0,\n  innerPadding=0,\n  trimSprite=false,\n  trim=false,\n  trimByGrid=false,\n  extrude=false,\n  ignoreEmpty=false,\n  mergeDuplicates=false,\n  openGenerated=false,\n  layer=\"\",\n  tag=\"\",\n  splitLayers=false,\n  splitTags=false,\n  splitGrid=false,\n  listLayers=true,\n  listTags=true,\n  listSlices=true,\n  fromTilesets=false,\n}","source":"docs","sourceUrl":"https://www.aseprite.org/api/command/ExportSpriteSheet#exportspritesheet","user":"dev"}
{"instruction":"This is similar to using the -export-tileset argument from the CLI with -format=json-array option.\n\nThis command accept the same parameters as app.command.SaveFileCopyAs.","output":"app.command.ExportTileset {\n  dataFormat=SpriteSheetDataFormat.JSON_ARRAY,\n  fromTilesets=true\n}","source":"docs","sourceUrl":"https://www.aseprite.org/api/command/ExportTileset#exporttileset","user":"dev"}
{"instruction":"ui: Shows the dialog on the screen, true by default. Set to false for automatic change brightness and/or contrast without asking to the user for the change.\nchannels: A combination of FilterChannels with bitwise OR (|) operator. By default it is equal to: FilterChannels.RED | FilterChannels.GREEN | FilterChannels.BLUE | FilterChannels.GRAY.\nmode: 'hsl' (default) or 'hsv'\nhue: From -180 to 180\nsaturation: From -100 to 100\nlightness (or value): From -100 to 100\nalpha: From -100 to 100","output":"app.command.HueSaturation {\n  ui=true,\n  channels=FilterChannels...,\n  mode='hsl',\n  hue=0,\n  saturation=0,\n  lightness=0,\n  alpha=0\n}","source":"docs","sourceUrl":"https://www.aseprite.org/api/command/HueSaturation#huesaturation","user":"dev"}
{"instruction":"Import sprites","output":"app.command.ImportSpriteSheet {\n  ui=true,\n  type=SpriteSheetType.ROWS,\n  frameBounds=Rectangle,\n  padding=Size(0, 0),\n  partialTiles=false\n}","source":"docs","sourceUrl":"https://www.aseprite.org/api/command/ImportSpriteSheet#importspritesheet","user":"dev"}
{"instruction":"ui: Shows the dialog on the screen, true by default. Set to false for automatic invert colors without asking to the user for the change.\nchannels: A combination of FilterChannels with bitwise OR (|) operator. By default it is equal to: FilterChannels.RED | FilterChannels.GREEN | FilterChannels.BLUE | FilterChannels.GRAY.","output":"app.command.InvertColor {\n  ui=true,\n  channels=FilterChannels...\n}","source":"docs","sourceUrl":"https://www.aseprite.org/api/command/InvertColor#invertcolor","user":"dev"}
{"instruction":"Changes the opacity of the active Layer.\n\nopacity: From 0 to 255","output":"app.command.LayerOpacity {\n    opacity = 0\n}","source":"docs","sourceUrl":"https://www.aseprite.org/api/command/LayerOpacity#layeropacity","user":"dev"}
{"instruction":"Moves the range selected colors app.range.colors before the given colorIndex.","output":"app.command.MoveColors {\n  before=colorIndex\n}","source":"docs","sourceUrl":"https://www.aseprite.org/api/command/MoveColors#movecolors","user":"dev"}
{"instruction":"Moves the selection boundaries or its content (pixels).\ntarget (string): must be\n'boundaries' to modify selection boundaries onlyor\n'content' to modify the selection content (active cel pixels)\nwrap: true or false, when true it does the Edit \u003e Shift effect, were pixels from one side in will appear from the other side (so the content is shifted and pixels wrapped, so the selection boundaries is not moved at all, only pixels inside it)\ndirection (string): the selection will be moved to a specific direction:\n'left'\n'right'\n'up'\n'down'\nunits (string): must be one of these options (generally pixel is enough for scripts, and other options are just for UI):\n'pixel'\n'tile-width'\n'tile-height'\n'zoomed-pixel'\n'zoomed-tile-width'\n'zoomed-tile-height'\n'viewport-width'\n'viewport-height'\nquantity: the number of pixels, or tile-widths, etc. to move the selection to the given direction depending on the units","output":"app.command.MoveMask {\n  target='boundaries' | 'content',\n  wrap=false,\n  direction='left' | 'right' | 'up' | 'down',\n  units='pixel',\n  quantity=1\n}","source":"docs","sourceUrl":"https://www.aseprite.org/api/command/MoveMask#movemask","user":"dev"}
{"instruction":"ui\nwidth\nheight\ncolorMode (ColorMode)\nfromClipboard","output":"app.command.NewFile {\n  ui=true,\n  width=0,\n  height=0,\n  colorMode=ColorMode.RGB,\n  fromClipboard=false\n}","source":"docs","sourceUrl":"https://www.aseprite.org/api/command/NewFile#newfile","user":"dev"}
{"instruction":"name (string): the name of the layer.\ngroup: true to make the new layer a group layer, this option is mutually exclusive to reference/tilemap.\nreference: true to make the new layer a reference layer, this option is mutually exclusive to group/tilemap.\ntilemap: true to make the new layer a tilemap layer, this option is mutually exclusive to group/reference.\ngridBounds: a rectangle to specify the tilemap grid by default (instead of using the sprite grid)\nask: true to ask the user for a name if inside the interface.\nfromFile: true to create the layer from a file, the Open File dialog will appear in the UI.\nfromClipboard: true to create the layer from clipboard image data.\nviaCut: true the selected image data is cut and moved into the new layer.\nviaCopy: true the selected image data is copied into the new layer.\ntop: true the newly created layer is placed at the top of the list.\nbefore: true the newly created layer is placed before the currently active layer; but if false it is placed after.","output":"app.command.NewLayer {\n  name=\"\",\n  group=false,\n  reference=false,\n  tilemap=false,\n  gridBounds=Rectangle,\n  ask=false,\n  fromFile=false,\n  fromClipboard=false,\n  viaCut=false,\n  viaCopy=false,\n  top=false,\n  before=false\n}","source":"docs","sourceUrl":"https://www.aseprite.org/api/command/NewLayer#newlayer","user":"dev"}
{"instruction":"Opens the Aseprite preferences dialog.\n\nThis command can also be used to prompt the user to install an Aseprite extension file.","output":"app.command.Options()","source":"docs","sourceUrl":"https://www.aseprite.org/api/command/Options#options","user":"dev"}
{"instruction":"Parameters:\n\ninstallExtension: the path to the *.aseprite-extension file to be installed","output":"app.command.Options {\n  installExtension=\"\" \n}","source":"docs","sourceUrl":"https://www.aseprite.org/api/command/Options#example","user":"user"}
{"instruction":"ui: Show the dialog on the screen, true by default.\nchannels: A combination of FilterChannels with bitwise OR (|) operator. The default value depends on the active sprite color mode:\nRGBA: FilterChannels.RGBA\nGrayscale: FilterChannels.GRAYA\nIndexed: FilterChannels.INDEX\nplace: 'inside' or 'outside'\nmatrix: 'circle', 'square', 'horizontal', or 'vertical'\ncolor: The color of the outline\nbgColor: The color of the background (the transparent color by default on transparent layers, or the first pixel at the top-left corner in background layer)\ntiledMode: 'none', 'x', 'y', 'both'. By default it's 'none' if there is no UI, or it's equal to app.preferences.document(app.sprite).tiled.mode when ui is true.","output":"app.command.Outline {\n  ui=true,\n  channels=FilterChannels...,\n  place='outside',\n  matrix='circle',\n  color=app.fgColor,\n  bgColor=Color(),\n  tiledMode='none'\n}","source":"docs","sourceUrl":"https://www.aseprite.org/api/command/Outline#outline","user":"dev"}
{"instruction":"ui: Show the dialog on the screen, true by default. Set to false for automatic replacement without asking to the user for the change. When the dialog is displayed to the user, app.command.ReplaceColor() will return a true or false value indicating if the replacement was accepeted or cancelled respectively.\nchannels: A combination of FilterChannels with bitwise OR (|) operator. The default value depends on the active sprite color mode:\nRGBA: FilterChannels.RGBA\nGrayscale: FilterChannels.GRAYA\nIndexed: FilterChannels.INDEX\nfrom: Color to replace (it's the foreground color by default)\nto: Color to replace (it's the background color by default)\ntolerance: Maximum allowed difference between from and the pixel in the image to apply the replacement.","output":"app.command.ReplaceColor {\n  ui=true,\n  channels=FilterChannels...,\n  from=Color,\n  to=Color,\n  tolerance=0\n}","source":"docs","sourceUrl":"https://www.aseprite.org/api/command/ReplaceColor#replacecolor","user":"dev"}
{"instruction":"Saves the current image in a specific file. These 3 commands have little differences by default:\n\nSaveFile: It's like File \u003e Save option. It will try to save the active sprite with its already associated file, in other case acts like the SaveFileAs showing the dialog to select the filename.\nSaveFileAs: It's like File \u003e Save As option. Saves the active sprite in a new file (shows the dialog to select a file by default). The active sprite filename will be changed to the new selected filename.\nSaveFileCopyAs: It's like File \u003e Export option. Saves a copy of the active sprite in other file. The filename will be kept intact.\nParameters:\n\nui: Shows the dialog to select the filename. SaveFile doesn't show the UI (false by default) if the sprite has an associated file. SaveFileAs and SaveFileCopyAs will show the UI by default.\nrecent: Only available since v1.3.7, it adds the file to the list of recent files. By default it depends if the dialog to select the filename is displayed (depends on the value of the ui parameter).\nfilename: The filename where to save the sprite. The default values is the\nfilenameFormat: Special value similar to --filename-format when we use --save-as from the CLI\ntag: A tag name. You can save only the range of frames specified by this tag.\naniDir: By default it is AniDir.FORWARD, but you can specify any AniDir\nslice: A slice name (to save only a specific portion of the sprite)\nfromFrame/toFrame: A range of frames to save.\nignoreEmpty: false by default, but it can be true in case that you want to avoid saving empty frames of a sequence of files (e.g. when saving an animation as frame01.png, frame02.png, etc.).\nbounds: Available since v1.3-beta21: Only export the selected rectangle of the canvas.","output":"app.command.SaveFile {\n  ui=true,\n  recent=true,\n  filename=\"\",\n  filenameFormat=\"\",\n  tag=\"\",\n  aniDir=AniDir,\n  slice=\"\",\n  fromFrame=frame,\n  toFrame=frame,\n  ignoreEmpty=false,\n  bounds=Rectangle,\n}\napp.command.SaveFileAs { ... }\napp.command.SaveFileCopyAs { ... }","source":"docs","sourceUrl":"https://www.aseprite.org/api/command/SaveFile#savefile","user":"dev"}
{"instruction":"type: ink type to set, \"simple\" by default.\nMore info on ink type behavior at https://www.aseprite.org/docs/ink/","output":"app.command.SetInkType {\n  type=\"simple\"\n}","source":"docs","sourceUrl":"https://www.aseprite.org/api/command/SetInkType","user":"dev"}
{"instruction":"ui: Shows the dialog on the screen, true by default. Set to false to modify the sprite size without asking to the user.\nwidth: Final sprite width. Current sprite width by default.\nheight: Final sprite height. Current sprite height by default.\nscale: Bidimensional scale factor per unit (1.0 = same original sprite size). 1.0 by default.\nscaleX: horizontal scale factor per unit. 1.0 by default.\nscaleY: Vertical scale factor per unit. 1.0 by default.\nlockRatio: Final sprite aspect ratio is locked when it is true.false by default.\nmethod: Resize algorithm method to be used. \"nearest\" by default (Nearest Neighbor), alternatives: \"bilinear\" and \"rotSprite\".","output":"app.command.SpriteSize {\n  ui=true,\n  width=100,\n  height=100,\n  scale=1.0,\n  scaleX=1.0,\n  scaleY=1.0,\n  lockRatio=false,\n  method=\"nearest\"\n}","source":"docs","sourceUrl":"https://www.aseprite.org/api/command/SpriteSize","user":"dev"}
{"instruction":"Known issue: On the following code, we have a variable i pointing to the cel.image. After the app.command.SpriteSize execution, i doesn't longer points to original image. Finally, print(i.width) will fail.\n\nSo, to make it works, we have to use cel.image instead of i","output":"local s = Sprite(1, 1)\nlocal cel = app.cel\n\napp.command.SpriteSize{ ui = false, scaleX = 2 }\n\nprint(cel.image.width) -- it will print \"2\"","source":"docs","sourceUrl":"https://www.aseprite.org/api/command/SpriteSize","user":"user"}
{"instruction":"Returns the preferred path separator of the current platform, it is / on macOS and Linux, and \\ on Windows. Preferably you should use app.fs.joinPath().","output":"local fn = \"path\" .. app.fs.pathSeparator .. \"filename.png\"","source":"docs","sourceUrl":"https://www.aseprite.org/api/app_fs#appfspathseparator","user":"dev"}
{"instruction":"Will print path/filename.png on macOS or Linux, and path\\filename.png on Windows.","output":"local sep = app.fs.pathSeparator\nlocal fn = \"path\" .. sep .. \"filename.png\"\nprint(fn)","source":"docs","sourceUrl":"https://www.aseprite.org/api/app_fs#appfspathseparator","user":"user"}
{"instruction":"Returns the path/directory part (as a string) of the given filename fn.","output":"local pathPart = app.fs.filePath(fn)","source":"docs","sourceUrl":"https://www.aseprite.org/api/app_fs#appfsfilepath","user":"dev"}
{"instruction":"Returns the file name (including the extension part) of the given filename fn.","output":"local fileName = app.fs.fileName(fn)","source":"docs","sourceUrl":"https://www.aseprite.org/api/app_fs#appfsfilename","user":"dev"}
{"instruction":"Returns the file extension (without including the .) of the given filename fn. ","output":"local extension = app.fs.fileExtension(fn)","source":"docs","sourceUrl":"https://www.aseprite.org/api/app_fs#appfsfileextension","user":"dev"}
{"instruction":"Prints png.","output":"print(app.fs.fileExtension(\"path/file.png\"))","source":"docs","sourceUrl":"https://www.aseprite.org/api/app_fs#appfsfileextension","user":"user"}
{"instruction":"Returns the file title (without including the path nor the extension) of the given filename fn.","output":"local title = app.fs.fileTitle(fn)","source":"docs","sourceUrl":"https://www.aseprite.org/api/app_fs#appfsfiletitle","user":"dev"}
{"instruction":"Prints file.","output":"print(app.fs.fileTitle(\"path/file.png\"))","source":"docs","sourceUrl":"https://www.aseprite.org/api/app_fs#appfsfiletitle","user":"user"}
{"instruction":"Returns the file path joined with the title (without including the extension) of the given filename fn.","output":"local title = app.fs.filePathAndTitle(fn)","source":"docs","sourceUrl":"https://www.aseprite.org/api/app_fs#appfsfilepathandtitle","user":"dev"}
{"instruction":"Prints path/file.","output":"print(app.fs.filePathAndTitle(\"path/file.png\"))","source":"docs","sourceUrl":"https://www.aseprite.org/api/app_fs#appfsfilepathandtitle","user":"user"}
{"instruction":"Returns the file path converted to a canonical form for the current platform.","output":"print(app.fs.normalizePath(\"//home//user//path\"))","source":"docs","sourceUrl":"https://www.aseprite.org/api/app_fs#appfsnormalizepath","user":"dev"}
{"instruction":"Will print as /home/user/path on macOS or Linux, and C:\\home\\user\\path on Windows.","output":"print(app.fs.normalizePath(\"//home//user//path\"))","source":"docs","sourceUrl":"https://www.aseprite.org/api/app_fs#appfsnormalizepath","user":"user"}
{"instruction":"Can accept any number of string arguments to join together with the path separator for the current platform.","output":"local path = app.fs.joinPath(\"path1\", \"path2\")","source":"docs","sourceUrl":"https://www.aseprite.org/api/app_fs#appfsjoinpath","user":"dev"}
{"instruction":"Returns path1/path2 on macOS or Linux, and path1\\path2 on Windows.","output":"local path = app.fs.joinPath(\"path1\", \"path2\")","source":"docs","sourceUrl":"https://www.aseprite.org/api/app_fs#appfsjoinpath","user":"user"}
{"instruction":"Returns the path the Aseprite executable was launched from.","output":"app.fs.currentPath","source":"docs","sourceUrl":"https://www.aseprite.org/api/app_fs#appfscurrentpath","user":"dev"}
{"instruction":"Returns the installation path of Aseprite for the current platform.","output":"app.fs.appPath","source":"docs","sourceUrl":"https://www.aseprite.org/api/app_fs#appfsapppath","user":"dev"}
{"instruction":"Returns the path for temporary files for the current platform.\n\nOn macOS or Linux it will be /tmp, and Windows it will look like C:\\Users\\username\\AppData\\Local\\Temp\\.","output":"app.fs.tempPath","source":"docs","sourceUrl":"https://www.aseprite.org/api/app_fs#appfstemppath","user":"dev"}
{"instruction":"Returns the current user's Documents path for the current platform.\n\nDepending on the platform, this may return the user's home directory.","output":"app.fs.userDocsPath","source":"docs","sourceUrl":"https://www.aseprite.org/api/app_fs#appfsuserdocspath","user":"dev"}
{"instruction":"Returns the current user's Aseprite configuration path for the current platform.\n\nYou can learn about the specific location of this folder from the Aseprite documentation.","output":"app.fs.userConfigPath","source":"docs","sourceUrl":"https://www.aseprite.org/api/app_fs#appfsuserconfigpath","user":"dev"}
{"instruction":"Returns true if the given filename fn is a file.","output":"local exists = app.fs.isFile(fn)","source":"docs","sourceUrl":"https://www.aseprite.org/api/app_fs#appfsisfile","user":"dev"}
{"instruction":"Returns true if the given filename fn is a directory.","output":"local exists = app.fs.isDirectory(fn)","source":"docs","sourceUrl":"https://www.aseprite.org/api/app_fs#appfsisdirectory","user":"dev"}
{"instruction":"Returns the file size of the given filename fn.","output":"local size = app.fs.fileSize(fn)","source":"docs","sourceUrl":"https://www.aseprite.org/api/app_fs#appfsfilesize","user":"dev"}
{"instruction":"Returns a list of files in the given directory path. The returned value is a table where each element is a file name, each file name is relative to the given path, they are not full path file names. ","output":"local table = app.fs.listFiles(path)","source":"docs","sourceUrl":"https://www.aseprite.org/api/app_fs#appfslistfiles","user":"dev"}
{"instruction":"In case that you want to get a list of full file names you can do something like thi","output":"local dir = ...\nfor _,filename in pairs(app.fs.listFiles(dir)) do\n  local fullFilename = app.fs.joinPath(dir, filename)\n  ...\nend","source":"docs","sourceUrl":"https://www.aseprite.org/api/app_fs#appfslistfiles","user":"user"}
{"instruction":"Create one directory.\n\nReturns true if the directory was created.","output":"app.fs.makeDirectory(path)","source":"docs","sourceUrl":"https://www.aseprite.org/api/app_fs#appfsmakedirectory","user":"dev"}
{"instruction":"Create all directories needed to access to the path, so path could be dir1/dir2/dir3 and the whole hierarchy of directories will be created.\n\nReturns true if all the directories were created.","output":"local result = app.fs.makeAllDirectories(path)","source":"docs","sourceUrl":"https://www.aseprite.org/api/app_fs#appfsmakealldirectories","user":"dev"}
{"instruction":"Remove the given directory (it must be empty).\n\nReturns true if the directory was removed (or is already removed).","output":"app.fs.removeDirectory(path)","source":"docs","sourceUrl":"https://www.aseprite.org/api/app_fs#appfsremovedirectory","user":"dev"}
{"instruction":"Returns the platform name. It can be Windows, macOS, or Linux.","output":"local name = app.os.name","source":"docs","sourceUrl":"https://www.aseprite.org/api/app_os#apposname","user":"dev"}
{"instruction":"Returns an Version with the Windows or macOS version. It's just 0.0.0 on Linux.","output":"app.os.version","source":"docs","sourceUrl":"https://www.aseprite.org/api/app_os#apposversion","user":"dev"}
{"instruction":"Returns the full platform name with its version. On Linux returns the distribution name with its specific version.\n\nSome examples: Windows NT 10.0.22631, macOS 14.4.1, Pop!_OS 22.04 LTS, etc.","output":"app.os.fullName","source":"docs","sourceUrl":"https://www.aseprite.org/api/app_os#apposfullname","user":"dev"}
{"instruction":"Constructs a 32-bit unsigned integer for RGBA images. Alpha will be 255 (i.e. 100% opaque) if it's not specified.","output":"local rgbaPixelValue = app.pixelColor.rgba(red, green, blue, [, alpha])","source":"docs","sourceUrl":"https://www.aseprite.org/api/pixelcolor#apppixelcolorrgba","user":"dev"}
{"instruction":"Create a red pixel and a semi-transparent white pixel","output":"local pc = app.pixelColor\nlocal redPixel = pc.rgba(255, 0, 0)\nlocal semiTransparentWhite = pc.rgba(255, 255, 255, 128)","source":"docs","sourceUrl":"https://www.aseprite.org/api/pixelcolor#apppixelcolorrgba","user":"user"}
{"instruction":"Returns the red component of the given 32-bit integer (rgbaPixelValue). This integer is a value created with app.pixelColor.rgba() or Image:getPixel() from a RGBA image.\n\nNote: RGB components are not premultiplied by alpha.","output":"local redComponent = app.pixelColor.rgbaR(rgbaPixelValue)","source":"docs","sourceUrl":"https://www.aseprite.org/api/pixelcolor#apppixelcolorrgbar","user":"dev"}
{"instruction":"Returns the red component of the given 32-bit integer (rgbaPixelValue). This integer is a value created with app.pixelColor.rgba() or Image:getPixel() from a RGBA image.","output":"local pc = app.pixelColor\nlocal rgbaPixelValue = pc.rgba(255, 128, 0)\nlocal redComponent = pc.rgbaR(rgbaPixelValue)\nlocal greenComponent = pc.rgbaG(rgbaPixelValue)\n-- redComponent is 255\n-- greenComponent is 128","source":"docs","sourceUrl":"https://www.aseprite.org/api/pixelcolor#apppixelcolorrgbar","user":"user"}
{"instruction":"Same as rgbaR() but with the Green component.","output":"app.pixelColor.rgbaG()","source":"docs","sourceUrl":"https://www.aseprite.org/api/pixelcolor#apppixelcolorrgbag","user":"dev"}
{"instruction":"Same as rgbaR() but with the Blue component.","output":"app.pixelColor.rgbaB()","source":"docs","sourceUrl":"https://www.aseprite.org/api/pixelcolor#apppixelcolorrgbab","user":"dev"}
{"instruction":"Same as rgbaR() but with the Alpha component.","output":"app.pixelColor.rgbaA()","source":"docs","sourceUrl":"https://www.aseprite.org/api/pixelcolor#apppixelcolorrgbaa","user":"dev"}
{"instruction":"Constructs a 16-bit unsigned integer for grayscale images. Alpha will be 255 (i.e. 100% opaque) if it's not specified.","output":"local grayPixelValue = app.pixelColor.graya(gray [, alpha])","source":"docs","sourceUrl":"https://www.aseprite.org/api/pixelcolor#apppixelcolorgraya","user":"dev"}
{"instruction":"Create pixels that I can use in a grayscale sprite","output":"local pc = app.pixelColor\nlocal black = pc.graya(0)\nlocal white = pc.graya(255)\nlocal semiTransparentWhite = pc.graya(255, 128)","source":"docs","sourceUrl":"https://www.aseprite.org/api/pixelcolor#apppixelcolorgraya","user":"user"}
{"instruction":"Returns the gray component of the given 16-bit integer (grayPixelValue). This integer is a value created with app.pixelColor.graya() or Image:getPixel() from a grayscale image.","output":"local grayValue = app.pixelColor.grayaV(grayPixelValue)","source":"docs","sourceUrl":"https://www.aseprite.org/api/pixelcolor#apppixelcolorgrayav","user":"dev"}
{"instruction":"Returns the gray component of the given 16-bit integer (grayPixelValue). This integer is a value created with app.pixelColor.graya() or Image:getPixel() from a grayscale image.","output":"local pc = app.pixelColor\nlocal grayPixelValue = pc.graya(128, 32)\nlocal grayComponent = pc.grayaV(grayPixelValue)\nlocal alphaComponent = pc.grayaA(grayPixelValue)\n-- grayComponent is 128\n-- alphaComponent is 32","source":"docs","sourceUrl":"https://www.aseprite.org/api/pixelcolor#apppixelcolorgrayav","user":"user"}
{"instruction":"Same as grayaV() but with the Alpha component.","output":"app.pixelColor.grayaA()","source":"docs","sourceUrl":"https://www.aseprite.org/api/pixelcolor#apppixelcolorgrayaa","user":"dev"}
{"instruction":"The color can be used to paint in an Image or a GraphicsContext.\n\nList of possible colors: https://github.com/aseprite/aseprite/blob/3c77928a6f193748bcd8cca15d45000dd58e11d5/data/extensions/aseprite-theme/theme.xml#L33","output":"local color = app.theme.color.color_name","source":"docs","sourceUrl":"https://www.aseprite.org/api/app_theme#appthemecolor","user":"dev"}
{"instruction":"Returns a number identified in the dimensions of the theme. List of possible dimensions: https://github.com/aseprite/aseprite/blob/3c77928a6f193748bcd8cca15d45000dd58e11d5/data/extensions/aseprite-theme/theme.xml#L11","output":"local value = app.theme.dimension.dimension_name","source":"docs","sourceUrl":"https://www.aseprite.org/api/app_theme#appthemedimension","user":"dev"}
{"instruction":"Returns information about the given style ID (style_id must be a string). The returned information at the moment includes a border field which is a table with left/top/right/bottom border dimension in pixels (they already have app.uiScale applied).\n\nList of possible styles: https://github.com/aseprite/aseprite/blob/0c092cc37c193786bad702c0830b739f5ff808e0/data/extensions/aseprite-theme/theme.xml#L446","output":"local data = app.theme:styleMetrics(style_id)\nlocal leftBorder = data.border.left\nlocal topBorder = data.border.top\nlocal rightBorder = data.border.right\nlocal bottomBorder = data.border.bottom","source":"docs","sourceUrl":"https://www.aseprite.org/api/app_theme#appthemestylemetrics","user":"dev"}
{"instruction":"Parses the given jsonText and returns a Lua table-like object jsonObj that represents the given data.","output":"local jsonObj = json.decode(jsonText)","source":"docs","sourceUrl":"https://www.aseprite.org/api/json#jsondecode","user":"dev"}
{"instruction":"Decode this json","output":"local obj = json.decode('{\"a\":true,\"b\":5,\"c\":[1,3,9]}')\nassert(#obj == 3)\nassert(obj.a == true)\nassert(obj.b == 5)\nassert(#obj.c == 3)\nassert(obj.c[1] == 1)\nassert(obj.c[2] == 3)\nassert(obj.c[3] == 9)","source":"docs","sourceUrl":"https://www.aseprite.org/api/json#jsondecode","user":"user"}
{"instruction":"Converts the given Lua-table into a JSON text.","output":"local text = json.encode(luaTable)\nlocal text = json.encode(jsonObj) -- same as tostring(jsonObj)","source":"docs","sourceUrl":"https://www.aseprite.org/api/json#jsonencode","user":"dev"}
{"instruction":"Encode this json","output":"local text = json.encode({ a=4, b=true, c=\"name\", d={1,8,{a=2}} })\nassert(text == '{\"a\": 4, \"b\": true, \"c\": \"name\", \"d\": [1, 8, {\"a\": 2}]}')","source":"docs","sourceUrl":"https://www.aseprite.org/api/json#jsonencode","user":"user"}
{"instruction":"Set of flags/bits specifying horizontal and vertical alignment of an UI element. You can combine one or several of these values depending on the case/what you are aligning. The specific integer values of each element in this enum might vary in the future.","output":"local leftBottom = Align.LEFT | Align.BOTTOM\nlocal rightTop = Align.RIGHT | Align.TOP","source":"docs","sourceUrl":"https://www.aseprite.org/api/align#align","user":"dev"}
{"instruction":"You can use this color mode to create RGBA sprites and images.\n\nEach pixel is a 32-bit unsigned integer where each component (Red, Green, Blue, and Alpha) uses 8-bit (values from 0 to 255).","output":"ColorMode.RGB","source":"docs","sourceUrl":"https://www.aseprite.org/api/colormode#colormodergb","user":"dev"}
{"instruction":"You can use this color mode to create gray sprites and images. Known as ColorMode.GRAYSCALE in previous versions.\n\nEach pixel is a 16-bit unsigned integer where each component (Gray and Alpha) uses 8-bit (values from 0 to 255).","output":"ColorMode.GRAY","source":"docs","sourceUrl":"https://www.aseprite.org/api/colormode#colormodegray","user":"dev"}
{"instruction":"You can use this color mode to create indexed sprites and images.\n\nEach pixel is an 8-bit unsigned integer (a value from 0 to 255) which indicates the specific palette entry which the pixel refers.","output":"ColorMode.INDEXED","source":"docs","sourceUrl":"https://www.aseprite.org/api/colormode#colormodeindexed","user":"dev"}
{"instruction":"Special color mode used for tilemaps, where each pixel is tile reference in a tileset.","output":"ColorMode.TILEMAP","source":"docs","sourceUrl":"https://www.aseprite.org/api/colormode#colormodetilemap","user":"dev"}
{"instruction":"Same as FilterChannels.RED | FilterChannels.GREEN | FilterChannels.BLUE.","output":"FilterChannels.RGB","source":"docs","sourceUrl":"https://www.aseprite.org/api/filterchannels#filterchannelsrgb","user":"dev"}
{"instruction":"Same as FilterChannels.RED | FilterChannels.GREEN | FilterChannels.BLUE | FilterChannels.ALPHA.","output":"FilterChannels.RGBA","source":"docs","sourceUrl":"https://www.aseprite.org/api/filterchannels#filterchannelsrgba","user":"dev"}
{"instruction":"Same as FilterChannels.GRAY | FilterChannels.ALPHA.","output":"FilterChannels.GRAYA","source":"docs","sourceUrl":"https://www.aseprite.org/api/filterchannels#filterchannelsgraya","user":"dev"}
{"instruction":"Value 0 or \"simple\" string.","output":"Ink.SIMPLE","source":"docs","sourceUrl":"https://www.aseprite.org/api/ink#inksimple","user":"dev"}
{"instruction":"Value 1, \"alpha_compositing\", or \"alpha-compositing\".","output":"Ink.ALPHA_COMPOSITING","source":"docs","sourceUrl":"https://www.aseprite.org/api/ink#inkalpha_compositing","user":"dev"}
{"instruction":"Value 2, \"copy_color\", or \"copy-color\".","output":"Ink.COPY_COLOR","source":"docs","sourceUrl":"https://www.aseprite.org/api/ink#inkcopy_color","user":"dev"}
{"instruction":"Value 3, \"lock_alpha\", or \"lock-alpha\".","output":"Ink.LOCK_ALPHA","source":"docs","sourceUrl":"https://www.aseprite.org/api/ink#inklock_alpha","user":"dev"}
{"instruction":"Value 4, or \"shading\".","output":"Ink.SHADING","source":"docs","sourceUrl":"https://www.aseprite.org/api/ink#inkshading","user":"dev"}
{"instruction":"What are the AniDir constants","output":"AniDir.FORWARD\nAniDir.REVERSE\nAniDir.PING_PONG\nAniDir.PING_PONG_REVERSE","source":"docs","sourceUrl":"https://www.aseprite.org/api/anidir#anidir","user":"dev"}
{"instruction":"Mix the background colors with the blending image proportionally to its alpha values. Full transparent pixels will show the background.","output":"BlendMode.NORMAL","source":"docs","sourceUrl":"https://www.aseprite.org/api/blendmode#blendmodenormal","user":"dev"}
{"instruction":"A simple copy/paste of the blending image to the background.","output":"BlendMode.SRC","source":"docs","sourceUrl":"https://www.aseprite.org/api/blendmode#blendmodesrc","user":"dev"}
{"instruction":"What are the BlendModes","output":"BlendMode.MULTIPLY\nBlendMode.SCREEN\nBlendMode.OVERLAY\nBlendMode.DARKEN\nBlendMode.LIGHTEN\nBlendMode.COLOR_DODGE\nBlendMode.COLOR_BURN\nBlendMode.HARD_LIGHT\nBlendMode.SOFT_LIGHT\nBlendMode.DIFFERENCE\nBlendMode.EXCLUSION\nBlendMode.HSL_HUE\nBlendMode.HSL_SATURATION\nBlendMode.HSL_COLOR\nBlendMode.HSL_LUMINOSITY\nBlendMode.ADDITION\nBlendMode.SUBTRACT\nBlendMode.DIVIDE","source":"docs","sourceUrl":"https://www.aseprite.org/api/blendmode","user":"dev"}
{"instruction":"What are the BrushTypes","output":"BrushType.CIRCLE\nBrushType.SQUARE\nBrushType.LINE\nBrushType.IMAGE","source":"docs","sourceUrl":"https://www.aseprite.org/api/brushtype#brushtype","user":"dev"}
{"instruction":"What are the base FilterChannels","output":"FilterChannels.RED\nFilterChannels.GREEN\nFilterChannels.BLUE\nFilterChannels.ALPHA\nFilterChannels.GRAY\nFilterChannels.INDEX","source":"docs","sourceUrl":"https://www.aseprite.org/api/filterchannels#filterchannel","user":"dev"}
{"instruction":"What are the mouse button options","output":"MouseButton.NONE\nMouseButton.LEFT\nMouseButton.RIGHT\nMouseButton.MIDDLE\nMouseButton.X1\nMouseButton.X2","source":"docs","sourceUrl":"https://www.aseprite.org/api/mousebutton#mousebutton","user":"dev"}
{"instruction":"Mouse cursor that can be set in a canvas widget using:","output":"dialog:modify{ id=canvasId, mouseCursor=newMouseCursor }","source":"docs","sourceUrl":"https://www.aseprite.org/api/mousecursor#mousecursor","user":"dev"}
{"instruction":"What are the MouseCursor options","output":"MouseCursor.NONE\nMouseCursor.ARROW\nMouseCursor.CROSSHAIR\nMouseCursor.POINTER\nMouseCursor.NOT_ALLOWED\nMouseCursor.GRAB\nMouseCursor.GRABBING\nMouseCursor.MOVE\nMouseCursor.NS_RESIZE\nMouseCursor.WE_RESIZE\nMouseCursor.N_RESIZE\nMouseCursor.NE_RESIZE\nMouseCursor.E_RESIZE\nMouseCursor.SE_RESIZE\nMouseCursor.S_RESIZE\nMouseCursor.SW_RESIZE\nMouseCursor.W_RESIZE\nMouseCursor.NW_RESIZE","source":"docs","sourceUrl":"https://www.aseprite.org/api/mousecursor#mousecursor","user":"dev"}
{"instruction":"When there is no selection.","output":"RangeType.EMPTY","source":"docs","sourceUrl":"https://www.aseprite.org/api/rangetype#rangetypeempty","user":"dev"}
{"instruction":"When the selection is in the layers.","output":"RangeType.LAYERS","source":"docs","sourceUrl":"https://www.aseprite.org/api/rangetype#rangetypelayers","user":"dev"}
{"instruction":"When the selection is in the frames.","output":"RangeType.FRAMES","source":"docs","sourceUrl":"https://www.aseprite.org/api/rangetype#rangetypeframes","user":"dev"}
{"instruction":"When the selection is in the cels.","output":"RangeType.CELS","source":"docs","sourceUrl":"https://www.aseprite.org/api/rangetype#rangetypecels","user":"dev"}
{"instruction":"What are the different SelectionModes","output":"SelectionMode.REPLACE\nSelectionMode.ADD\nSelectionMode.SUBTRACT\nSelectionMode.INTERSECT","source":"docs","sourceUrl":"https://www.aseprite.org/api/selectionmode#selectionmode","user":"dev"}
{"instruction":"Data format used to export JSON files in app.command.ExportSpriteSheet.","output":"SpriteSheetDataFormat.JSON_HASH\nSpriteSheetDataFormat.JSON_ARRAY","source":"docs","sourceUrl":"https://www.aseprite.org/api/spritesheetdataformat#spritesheetdataformat","user":"dev"}
{"instruction":"Type of sprite sheet used in app.command.ExportSpriteSheet.","output":"SpriteSheetType.HORIZONTAL\nSpriteSheetType.VERTICAL\nSpriteSheetType.ROWS\nSpriteSheetType.COLUMNS\nSpriteSheetType.PACKED","source":"docs","sourceUrl":"https://www.aseprite.org/api/spritesheettype#spritesheettype","user":"dev"}
{"instruction":"Text message received","output":"WebSocketMessageType.TEXT","source":"docs","sourceUrl":"https://www.aseprite.org/api/websocketmessagetype#websocketmessagetypetext","user":"dev"}
{"instruction":"Binary message received","output":"WebSocketMessageType.BINARY","source":"docs","sourceUrl":"https://www.aseprite.org/api/websocketmessagetype#websocketmessagetypebinary","user":"dev"}
{"instruction":"Connected to the server","output":"WebSocketMessageType.OPEN","source":"docs","sourceUrl":"https://www.aseprite.org/api/websocketmessagetype#websocketmessagetypeopen","user":"dev"}
{"instruction":"Connection was closed for any reason, or broke","output":"WebSocketMessageType.CLOSE","source":"docs","sourceUrl":"https://www.aseprite.org/api/websocketmessagetype#websocketmessagetypeclose","user":"dev"}
{"instruction":"See the standard about ping and pong.","output":"WebSocketMessageType.PING","source":"docs","sourceUrl":"https://www.aseprite.org/api/websocketmessagetype#websocketmessagetypeping","user":"dev"}
{"instruction":"Your ping has been answered.\n\nNote that incoming pings are answered automatically.","output":"WebSocketMessageType.PONG","source":"docs","sourceUrl":"https://www.aseprite.org/api/websocketmessagetype#websocketmessagetypepong","user":"dev"}
{"instruction":"What are the other WebSocketMessageTypes","output":"WebSocketMessageType.FRAGMENT","source":"docs","sourceUrl":"https://www.aseprite.org/api/websocketmessagetype","user":"dev"}
{"instruction":"Create it using a brush","output":"local brush = Brush()\nlocal brush = Brush(size)\nlocal brush = Brush(image)\nlocal brush = Brush{\n  type=BrushType,\n  size=integer,\n  angle=-180...180,\n  center=Point\n  image=Image\n  pattern=BrushPattern\n  patternOrigin=Point\n}","source":"docs","sourceUrl":"https://www.aseprite.org/api/brush#brush","user":"user"}
{"instruction":"Cels belong to one sprite. This property returns that sprite.","output":"local sprite = cel.sprite","source":"docs","sourceUrl":"https://www.aseprite.org/api/cel#celsprite","user":"dev"}
{"instruction":"Returns the layer where this cel is located.","output":"local layer = cel.layer","source":"docs","sourceUrl":"https://www.aseprite.org/api/cel#cellayer","user":"dev"}
{"instruction":"Returns the frame object which this cel belongs. If you set this property, the cel will be moved to the given frame (if another cel already exists in that frame, it will be removed).","output":"local frame = cel.frame\ncel.frame = newFrame","source":"docs","sourceUrl":"https://www.aseprite.org/api/cel#celframe","user":"dev"}
{"instruction":"Returns the frame number which this cel belongs, the frame number 1 is the first frame (not 0). If you set this property the cel will be moved to the given frameNumber, check the notes of Cel.frame.","output":"local frameNumber = cel.frameNumber\ncel.frameNumber = newFrameNumber","source":"docs","sourceUrl":"https://www.aseprite.org/api/cel#celframenumber","user":"dev"}
{"instruction":"Gets or sets the image with the pixels of this cel. This is the preferred way to replace the cel image, because it generates only one undoable action.","output":"local image = cel.image\ncel.image = newImage","source":"docs","sourceUrl":"https://www.aseprite.org/api/cel#celimage","user":"dev"}
{"instruction":"Returns the rectangle with the cel bounds (position and size).","output":"local bounds = cel.bounds","source":"docs","sourceUrl":"https://www.aseprite.org/api/cel#celbounds","user":"dev"}
{"instruction":"Gets or sets the cel position.","output":"local position = cel.position\ncel.position = newPosition","source":"docs","sourceUrl":"https://www.aseprite.org/api/cel#celposition","user":"dev"}
{"instruction":"Gets or sets the cel opacity. A value from 0 to 255 (which means 0=0% completely transparent, or 255=100% completely opaque).","output":"local opacity = cel.opacity\ncel.opacity = newOpacity","source":"docs","sourceUrl":"https://www.aseprite.org/api/cel#celopacity","user":"dev"}
{"instruction":"Gets or sets the cel z-index value. By default 0, which means \"show this cel in the same position as its layer\", but can be modified to positive values to move the cel to the front, or negative values to move it to the back.\n\nIt offers a way to change the order of layers in one specific frame.\n\nNote: The value is limited to the [-32768,32767] range.","output":"local zIndex = cel.zIndex\ncel.zIndex = newZIndex","source":"docs","sourceUrl":"https://www.aseprite.org/api/cel#celzindex","user":"dev"}
{"instruction":"Gets or sets the user-defined color of this cel in the timeline.","output":"local color = cel.color\ncel.color = newColor","source":"docs","sourceUrl":"https://www.aseprite.org/api/cel#celcolor","user":"dev"}
{"instruction":"Gets or sets the user-defined data related to this cel (a text string).","output":"local data = cel.data\ncel.data = newData","source":"docs","sourceUrl":"https://www.aseprite.org/api/cel#celdata","user":"dev"}
{"instruction":"Access user-defined and extension-defined properties of this cel.","output":"Cel.properties","source":"docs","sourceUrl":"https://www.aseprite.org/api/cel#celproperties","user":"dev"}
{"instruction":"If alpha argument is not specified, it's 255 by default (opacity = 100%).\nThe Color(integer) constructor receives a pixel color and the integer is interpreted depending on the active sprite.","output":"local c\nc = Color{ r=255, g=255, b=255, a=255 }\nc = Color{ h=360.0, s=1.0, v=1.0, a=255 }\nc = Color{ h=360.0, s=1.0, l=1.0, a=255 }\nc = Color{ red=255, green=255, blue=255, alpha=255 }\nc = Color{ hue=360.0, saturation=1.0, value=1.0, alpha=255 }\nc = Color{ hue=360.0, saturation=1.0, lightness=1.0, alpha=255 }\nc = Color{ gray=255, alpha=255 }\nc = Color{ index=integer }\nc = Color(integer)","source":"docs","sourceUrl":"https://www.aseprite.org/api/color#color","user":"dev"}
{"instruction":"Set alpha/transparency to x","output":"local c = Color{ r=0, g=0, b=0, a=128 }\nassert(c.alpha == 128)","source":"docs","sourceUrl":"https://www.aseprite.org/api/color#coloralpha","user":"user"}
{"instruction":"Set color as x","output":"local c = Color{ r=255, g=128, b=32 }\nassert(c.red   == 255)\nassert(c.green == 128)\nassert(c.blue  == 32)\nc.red   = 20\nc.green = 40\nc.blue  = 255","source":"docs","sourceUrl":"https://www.aseprite.org/api/color#colorred/green/blue","user":"user"}
{"instruction":"Set you or saturation to x","output":"local c = Color{ h=45, s=0.5, v=0.2 }\nassert(c.hsvHue        == 45)\nassert(c.hsvSaturation == 0.5)\nassert(c.hsvValue      == 0.2)","source":"docs","sourceUrl":"https://www.aseprite.org/api/color#colorhsvhue/saturation/value","user":"user"}
{"instruction":"Gets/sets the HSV hue or HSL hue depending on the kind of color.","output":"Color.hue","source":"docs","sourceUrl":"https://www.aseprite.org/api/color#colorhue","user":"dev"}
{"instruction":"Gets/sets the HSV saturation or HSL saturation depending on the kind of color.","output":"Color.saturation","source":"docs","sourceUrl":"https://www.aseprite.org/api/color#colorsaturation","user":"dev"}
{"instruction":"Gets/sets the HSV value.","output":"Color.value","source":"docs","sourceUrl":"https://www.aseprite.org/api/color#colorvalue","user":"dev"}
{"instruction":"Gets/sets the HSL lightness.","output":"Color.lightness","source":"docs","sourceUrl":"https://www.aseprite.org/api/color#colorlightness","user":"dev"}
{"instruction":"Gets or sets the palette index related to this color. If the color is not an index, i.e. it's RGB/HSL/HSV, the closest palette index of the current palette (the palette of the active sprite) that matches the RGB/HSL/HSV values will be returned.","output":"local c = Color(index)\noldIndex = c.index\nc.index = newIndex","source":"docs","sourceUrl":"https://www.aseprite.org/api/color#colorindex","user":"dev"}
{"instruction":"Returns the pixel color which is equivalent to the RGBA values of this color.","output":"local c = Color{ r=200, g=100, b=0, a=255 }\nassert(c.rgbaPixel == app.pixelColor.rgba(200, 100, 0, 255))","source":"docs","sourceUrl":"https://www.aseprite.org/api/color#colorrgbapixel","user":"dev"}
{"instruction":"Returns the pixel color which is equivalent to the gray+alpha values of this color.","output":"Color.grayPixel","source":"docs","sourceUrl":"https://www.aseprite.org/api/color#colorrgbapixel","user":"dev"}
{"instruction":"Creates an empty color space, sRGB color space, or loads a color profile from the given ICC file specified in fromFile parameter.","output":"local none = ColorSpace()\nlocal srgb = ColorSpace{ sRGB=true }\nlocal icc = ColorSpace{ fromFile=\"/path/file.icc\" }","source":"docs","sourceUrl":"https://www.aseprite.org/api/colorspace#colorspace","user":"dev"}
{"instruction":"Get/sets the color space name.","output":"local cs = ColorSpace()\nlocal colorSpaceName = cs.name","source":"docs","sourceUrl":"https://www.aseprite.org/api/colorspace#colorspacename","user":"dev"}
{"instruction":"The dialog class can be used to show input controls/widgets in the screen to get some data from the user.","output":"local dlg = Dialog()\ndlg:entry{ id=\"user_value\", label=\"User Value:\", text=\"Default User\" }\ndlg:button{ id=\"confirm\", text=\"Confirm\" }\ndlg:button{ id=\"cancel\", text=\"Cancel\" }\ndlg:show()\nlocal data = dlg.data\nif data.confirm then\n  app.alert(\"The given value is '\" .. data.user_value .. \"'\")\nend","source":"docs","sourceUrl":"https://www.aseprite.org/api/dialog#dialog","user":"dev"}
{"instruction":"Almost all dialogs functions return the same dialog object so we can use method chaining. ","output":"local data =\n  Dialog():entry{ id=\"user_value\", label=\"User Value:\", text=\"Default User\" }\n          :button{ id=\"confirm\", text=\"Confirm\" }\n          :button{ id=\"cancel\", text=\"Cancel\" }\n          :show().data\nif data.confirm then\n  app.alert(\"The given value is '\" .. data.user_value .. \"'\")\nend","source":"docs","sourceUrl":"https://www.aseprite.org/api/dialog#dialog","user":"dev"}
{"instruction":"Each time we add a new widget like :button{ ... } some common properties can be specified for every kind of widget:","output":"Dialog:widget_type{\n  id=string,\n  label=string,\n  focus=boolean,\n  enabled=boolean,\n  visible=boolean,\n  hexpand=boolean,\n  vexpand=boolean,\n}","source":"docs","sourceUrl":"https://www.aseprite.org/api/dialog#dialog","user":"dev"}
{"instruction":"id: It's the ID to identify this widget in Dialog.data\nlabel: Label at the left side of the widget\nfocus: Focus this widget by default (useful to focus a specific entry when the dialog appears on the screen for the first time)\nenabled: Enable or disable the widget by default\nvisible: Make the widget visible or hidden by default\nhexpand: Expand the widget horizontally (useful to make a canvas with fixed size if we specify hexpand=false)\nvexpand: Expand the widget vertically (useful to make a canvas with fixed size if we specify vexpand=false)","output":"Dialog:widget_type{\n  id=string,\n  label=string,\n  focus=boolean,\n  enabled=boolean,\n  visible=boolean,\n  hexpand=boolean,\n  vexpand=boolean,\n}","source":"docs","sourceUrl":"https://www.aseprite.org/api/dialog#dialog","user":"dev"}
{"instruction":"Creates a new dialog. The dialog is hidden, so you have to call Dialog:show function to make it visible. The constructor that receives a string will use that string in the title bar of the dialog. The constructor that receives a table can receive a special callback function (onclose) that is called when the dialog is closed.\n\nThe { parent=otherDialog } can be used to display an alert/subdialog inside a parent dialog (the parent dialog is blocked until the child dialog is closed).\n\nThe { notitlebar=true } can be used to display a dialog without any kind of title bar (the dialog must be closed with a button inside it).\n\nReturns nil if there is no UI available, i.e. app.isUIAvailable is false.","output":"local dlg = Dialog()\nlocal dlg = Dialog(string)\nlocal dlg = Dialog{ title=string,\n                    notitlebar=false,\n                    parent=otherDialog,\n                    onclose=function }","source":"docs","sourceUrl":"https://www.aseprite.org/api/dialog#dialog","user":"dev"}
{"instruction":"Creates a button.\n\nArguments (table fields):\n\nid: Identifier for this button. Dialog.data will contain a field for each widget with and id.\nlabel: Label at the left side of the control.\ntext: Text of the button.\nselected: True in case that you want to show the button checked by default.\nfocus: Focus this button by default or when the Enter key is pressed in an text entry field.\nonclick: Function to be called when the button is pressed.","output":"local dlg = Dialog()\ndlg:button{ id=string,\n            label=string,\n            text=string,\n            selected=boolean,\n            focus=boolean,\n            onclick=function }","source":"docs","sourceUrl":"https://www.aseprite.org/api/dialog#dialogbutton","user":"dev"}
{"instruction":"Creates a check box. Arguments are the same as in Dialog:button.","output":"local dlg = Dialog()\ndlg:check{ id=string,\n           label=string,\n           text=string,\n           selected=boolean,\n           onclick=function }","source":"docs","sourceUrl":"https://www.aseprite.org/api/dialog#dialogcheck","user":"dev"}
{"instruction":"Closes the dialog from a onclick button event. By default buttons without an onclick event handler will close the dialog, but if you specify a onclick function, you have to call this function to close the dialog.","output":"local dlg = Dialog()\ndlg:button{ text=\"Close\",\n            onclick=function()\n                      dlg:close()\n                    end }\ndlg:show{ wait=false }","source":"docs","sourceUrl":"https://www.aseprite.org/api/dialog#dialogclose","user":"dev"}
{"instruction":"Creates a button to select a color.","output":"local dlg = Dialog()\ndlg:color{ id=string,\n           label=string,\n           color=app.Color,\n           onchange=function }","source":"docs","sourceUrl":"https://www.aseprite.org/api/dialog#dialogcolor","user":"dev"}
{"instruction":"Creates a combo box/drop-down list.\n\noptions: Indicates a list of available options in the combobox.\noption: Indicates the default selected option in the combobox (one of the options).","output":"local dlg = Dialog()\ndlg:combobox{ id=string,\n              label=string,\n              option=string,\n              options={ string1,string2,string3... },\n              onchange=function }","source":"docs","sourceUrl":"https://www.aseprite.org/api/dialog#dialogcombobox","user":"dev"}
{"instruction":"Gets/sets a table with one field for each widget with a given id. For each different kind of widget the field is of a different type:\n\nbutton/check/radio: The field is a boolean (true or false) if the button is selected or was used to close the dialog.\nentry/label: A string of text.\nslider: An integer.\nnumber: An intenger or a number depending on the number of decimals of the number field.\ncombobox: A string with the selected item.\ncolor: A Color.\nshades: A table with an array of Colors when mode=\"sort\"","output":"local dlg = Dialog()\nlocal data = dlg.data\ndlg.data = data","source":"docs","sourceUrl":"https://www.aseprite.org/api/dialog#dialogdata","user":"dev"}
{"instruction":"Gets or sets the position and size (a rectangle) of the dialog. This might be useful to align several dialog that must be shown in the same xy-position.","output":"local dlg = Dialog()\nlocal bounds = dlg.bounds\ndlg.bounds = Rectangle(x, y, bounds.width, bounds.height)","source":"docs","sourceUrl":"https://www.aseprite.org/api/dialog#dialogbounds","user":"dev"}
{"instruction":"Creates a text entry.","output":"local dlg = Dialog()\ndlg:entry{ id=string,\n           label=string,\n           text=string,\n           focus=boolean,\n           onchange=function }","source":"docs","sourceUrl":"https://www.aseprite.org/api/dialog#dialogentry","user":"dev"}
{"instruction":"id: Identifier for this label. If you specify it, a field in Dialog.data will be created with the given string in text.\nlabel: Text to be used in the left side.\ntext: Text to be used in the right side.\nCreates a static label.","output":"local dlg = Dialog()\ndlg:label{ id=string,\n           label=string,\n           text=string }","source":"docs","sourceUrl":"https://www.aseprite.org/api/dialog#dialoglabel","user":"dev"}
{"instruction":"Changes properties of the given widget that matches the identifier id.","output":"local dlg = Dialog()\ndlg:modify{ id=string,\n            visible=boolean,\n            enabled=boolean,\n            text=string }","source":"docs","sourceUrl":"https://www.aseprite.org/api/dialog#dialogmodify","user":"dev"}
{"instruction":"Using the dialog:modify with a parameter title changes the dialog title.","output":"local dlg = Dialog()\ndlg:modify{ title = \"New Dialog Title\" }","source":"docs","sourceUrl":"https://www.aseprite.org/api/dialog#dialogmodify","user":"user"}
{"instruction":"Indicates that the next widget should be put in a new row in the dialog (useful to create buttons or several controls of the same type one below the other).\n\nUsing the newrow{ always=true } is a way to avoid joining widgets of the same type (it's like calling newrow() after each new widget is added).","output":"local dlg = Dialog()\ndlg:newrow()\ndlg:newrow{ always=true }","source":"docs","sourceUrl":"https://www.aseprite.org/api/dialog#dialognewrow","user":"dev"}
{"instruction":"Creates an entry field to input a number.","output":"local dlg = Dialog()\ndlg:number{ id=string,\n            label=string,\n            text=string,\n            decimals=integer,\n            onchange=function }","source":"docs","sourceUrl":"https://www.aseprite.org/api/dialog#dialognumber","user":"dev"}
{"instruction":"Creates a radio button. Arguments are the same as in Dialog:button.","output":"local dlg = Dialog()\ndlg:radio{ id=string,\n           label=string,\n           text=string,\n           selected=boolean,\n           onclick=function }","source":"docs","sourceUrl":"https://www.aseprite.org/api/dialog#dialogradio","user":"dev"}
{"instruction":"Create separator in dialog","output":"local dlg = Dialog()\ndlg:separator{ id=string,\n               text=string }","source":"docs","sourceUrl":"https://www.aseprite.org/api/dialog#dialogseparator","user":"user"}
{"instruction":"Creates a widget with a set of colors that can be clicked/picked (when mode=\"pick\", which is the default mode) or can be sorted (when mode=\"sort\", which is the default mode).\n\nThe onclick function can receive a event parameter which is a table with one event.color field which is the color that was clicked, and a event.button field with the mouse button","output":"local dlg = Dialog()\ndlg:shades{ id=string,\n            label=string,\n            mode=\"pick\" | \"sort\",\n            colors={ color1, color2, color3, ... },\n            onclick=function }","source":"docs","sourceUrl":"https://www.aseprite.org/api/dialog#dialogshades","user":"dev"}
{"instruction":"The onclick function can receive a event parameter which is a table with one event.color field which is the color that was clicked, and a event.button field with the mouse button, ","output":"dlg:shades{\n  ...\n  onclick=function(ev)\n    if ev.button == MouseButton.LEFT then\n      -- In this case we change the active foreground color\n      -- with the clicked color in the shades widget when\n      -- the left mouse button is pressed.\n      app.fgColor = ev.color\n    elseif ev.button == MouseButton.RIGHT then\n      app.bgColor = ev.color\n    end\n  end\n}","source":"docs","sourceUrl":"https://www.aseprite.org/api/dialog#dialogshades","user":"user"}
{"instruction":"Makes the dialog visible to the user. The script code will continue when the dialog is closed by default (pressing a button).\n\nIf { wait=false } is used as argument, the dialog is open \"in background\", which means that the script code continues the execution with its following line, and the dialog will be visible until it's closed with some button or calling Dialog:close in a onclick event.\n\nWith { bounds=Rectangle() } you can display the dialog in a specific location. Useful to show the dialog in a previous position that you obtain from Dialog.bounds property.\n\nSetting { autoscrollbars=true } will add scrollbars automatically only if they are needed. This means that if your dialog contains enough widgets to make it go out of the window/screen (depending if you are using single window UI or multiple windows UI) then scrollbars will be shown into your dialog when its content doesn't fit its bounds.","output":"local dlg = Dialog()\ndlg:show()\ndlg:show{\n  wait=false,\n  bounds=Rectangle(),\n  autoscrollbars=false,\n}","source":"docs","sourceUrl":"https://www.aseprite.org/api/dialog#dialogshow","user":"dev"}
{"instruction":"Creates a slider in the dialog.","output":"local dlg = Dialog()\ndlg:slider{ id=string,\n            label=string,\n            min=integer,\n            max=integer,\n            value=integer,\n            onchange=function,\n            onrelease=function }","source":"docs","sourceUrl":"https://www.aseprite.org/api/dialog#dialogslider","user":"dev"}
{"instruction":"If called for the first time (or anytime after a Dialog:endtabs call), it creates a new tabs group and starts the first tab. If called after a previous Dialog:tab call, it marks the end of the previous tab and starts a new one.\n\nOnce started a tab, you can define its content by adding widgets as usual. When you are done adding tabs, call Dialog:endtabs.\n\nid: Identifier for this tab. If you specify it, you can use it in Dialog:endtabs to reference the selected tab. This value will be used also when asking for the selected tab through Dialog.data.\ntext: Text to display on the tab.\nonclick: Function to be called when the tab is pressed. It receives a parameter that you can use to get the pressed tab:","output":"local dlg = Dialog()\ndlg:tab{ id=string,\n         text=string,\n         onclick=function }","source":"docs","sourceUrl":"https://www.aseprite.org/api/dialog#dialogtab","user":"dev"}
{"instruction":"onclick: Function to be called when the tab is pressed. It receives a parameter that you can use to get the pressed tab\n\nDoes not support the following common properties: label, hexpand, vexpand. These can be specified at Dialog:endtabs.","output":"  { onclick=function(ev)\n       print(\"pressed tab: \" .. ev.tab)\n    end }","source":"docs","sourceUrl":"https://www.aseprite.org/api/dialog#dialogtab","user":"dev"}
{"instruction":"Marks the end of both the last tab and the group of tabs to which it belongs.\n\nid: Identifier for this tabs widget. Dialog.data will contain a field named as this id, which will return the value of the currently selected tab's id.\nalign: Horizontal and vertical alignment/placement of the tabs selector specified with Align values. Its default value is { align=Align.CENTER|Align.TOP }.\nonchange: Function to be called when the tab is changed. It receives a parameter that you can use to get the selected tab:","output":"local dlg = Dialog()\ndlg:endtabs{ id=string,\n             selected=string,\n             align=integer,\n             onchange=function }","source":"docs","sourceUrl":"https://www.aseprite.org/api/dialog#dialogendtabs","user":"dev"}
{"instruction":"onchange: Function to be called when the tab is changed. It receives a parameter that you can use to get the selected tab:","output":"  { onchange=function(ev)\n       print(\"selected tab: \" .. ev.tab)\n    end }","source":"docs","sourceUrl":"https://www.aseprite.org/api/dialog#dialogendtabs","user":"dev"}
{"instruction":"Creates a text entry field + a button to select one file to open or save, possibilities:\n\nopen=true: shows a dialog to open an existent file (this is the default mode).\nsave=true: shows a dialog to select an existent file to overwrite or a new file to save.\nArguments (table fields):\n\nload: True if you want to show a dialog to the user to select an existent file to load/read.\nsave: True if you want to show a dialog to the user to select a new file to save/write content.\nfilename: String of the selected filename to open or save.\nfiletypes: Array of possible file types/extensions that the user can select.\nentry: Show an entry field to edit the filename manually (false by default).\nfocus: Focus this field by default.\nonchange: Function to be called when the filename is changed.","output":"local dlg = Dialog()\ndlg:file{ id=string,\n          label=string,\n          title=string,\n          open=boolean,\n          save=boolean,\n          filename=string | { string1,string2,string3... },\n          filetypes={ string1,string2,string3... },\n          onchange=function }","source":"docs","sourceUrl":"https://www.aseprite.org/api/dialog#dialogfile","user":"dev"}
{"instruction":"The Canvas widget provides several events to create an interactive experience with the user:\n\nonpaint: A function that receives an event with a GraphicsContext (ev.context) to paint on.\nonkeydown/onkeyup: Key events when a key is pressed or released. If a canvas widget handles these events, it will receive the keyboard focus when it's clicked. The ev event is a KeyEvent.\nonmousemove/onmousedown/onmouseup/onwheel: Mouse events when the mouse is moved over the canvas, a button is pressed (onmousedown), a button is released (onmouseup), or the mouse wheel moved (onwheel). The ev event is a MouseEvent.\nontouchmagnify: Touch event generated when a pinch gesture is done in the trackpad to zoom in or out. The ev event is a TouchEvent.\nThe autoscaling property allows the script developer to draw on the GraphicsContext received in the canvas's onpaint event without worrying about the current UI scale setting. For instance, you can draw a 20[px]x30[px] rectangle in the canvas's GraphicsContext and it will be displayed the same at any UI scale. This property is enabled by default if omitted, so if you don't need it you must explicitly set it to false.","output":"local dlg = Dialog()\ndlg:canvas{ id=string,\n            width=integer,\n            height=integer,\n            autoscaling=boolean,\n            onpaint=function(ev) ... end,\n            onkeydown=function(ev) ... end,\n            onkeyup=function(ev) ... end,\n            onmousemove=function(ev) ... end,\n            onmousedown=function(ev) ... end,\n            onmouseup=function(ev) ... end,\n            ondblclick=function(ev) ... end,\n            onwheel=function(ev) ... end,\n            ontouchmagnify=function(ev) ... end }","source":"docs","sourceUrl":"https://www.aseprite.org/api/dialog#dialogcanvas","user":"dev"}
{"instruction":"Will call onpaint event of all canvases and update the dialog pixels on the screen.","output":"dlg:repaint()","source":"docs","sourceUrl":"https://www.aseprite.org/api/dialog#dialogrepaint","user":"dev"}
{"instruction":"Returns the sprite in the editor.","output":"local sprite = app.editor.sprite","source":"docs","sourceUrl":"https://www.aseprite.org/api/editor#editorsprite","user":"dev"}
{"instruction":"Returns a point of the the mouse position on the sprite, i.e. what pixel is going to be changed if the user clicks the mouse.","output":"local point = app.editor.spritePos","source":"docs","sourceUrl":"https://www.aseprite.org/api/editor#editorspritepos","user":"dev"}
{"instruction":"Returns a point indicating the mouse position on the screen.","output":"local point = app.editor.mousePos","source":"docs","sourceUrl":"https://www.aseprite.org/api/editor#editormousepos","user":"dev"}
{"instruction":"Asks the user to select a pixel/point on the sprite. It's similar to what happens when you choose Edit \u003e New Brush (but in that case you select a rectangle).\n\ntitle: Text to show in the context bar\npoint: Initial point to highlight (optional)\nonclick: Happens when the user clicks (press/release a mouse button) on the canvas\nonchange: Happens when the user drags the mouse (press/move mouse/release a mouse button) on the canvas\noncancel: Happens when the user cancels the action (e.g. press the Escape key)","output":"app.editor:askPoint{\n  title=string,\n  point=initialPoint,\n  onclick=function(ev) ... end,\n  onchange=function(ev) ... end,\n  oncancel=function(ev) ... end,\n}","source":"docs","sourceUrl":"https://www.aseprite.org/api/editor#editoraskpoint","user":"dev"}
{"instruction":"Cancels the editor:askPoint() action.","output":"app.editor:cancel()","source":"docs","sourceUrl":"https://www.aseprite.org/api/editor#editorcancel","user":"dev"}
{"instruction":"Connects the given function (2nd argument) with the given event by eventName (a string, the event name/code/identifier). When the event happens in the future the function will be called automatically. This is like the function starts \"listening\" the event.\n\nThe returned listenerCode is a numeric value that indicates the connection between the event and the function. You can use this value in Events.off() to stop listening/break the connection with the event.","output":"local listenerCode = events:on(eventName, function)","source":"docs","sourceUrl":"https://www.aseprite.org/api/events#eventson","user":"dev"}
{"instruction":"Connects the given function (2nd argument) with the given event by eventName (a string, the event name/code/identifier). When the event happens in the future the function will be called automatically. This is like the function starts \"listening\" the event.\n\nThe returned listenerCode is a numeric value that indicates the connection between the event and the function. You can use this value in Events.off() to stop listening/break the connection with the event.","output":"app.events:on('sitechange',\n  function()\n    print('app.site has changed')\n  end)","source":"docs","sourceUrl":"https://www.aseprite.org/api/events#eventson","user":"user"}
{"instruction":"Disconnects the given function from all events in the object, or stops/breaks only the specific connection identified by listenerCode (the code returned by Events:on()).","output":"events:off(function)\nevents:off(listenerCode)","source":"docs","sourceUrl":"https://www.aseprite.org/api/events#eventsoff","user":"dev"}
{"instruction":"Disconnects the given function from all events in the object, or stops/breaks only the specific connection identified by listenerCode (the code returned by Events:on()).","output":"local function onSiteChange() ... end\napp.events:on('sitechange', onSiteChange)\napp.events:off(onSiteChange)","source":"docs","sourceUrl":"https://www.aseprite.org/api/events#eventsoff","user":"user"}
{"instruction":"Returns the sprite of this frame.","output":"local sprite = frame.sprite","source":"docs","sourceUrl":"https://www.aseprite.org/api/frame#framesprite","user":"dev"}
{"instruction":"Returns the frame number. 1 is the first frame in the animation and this frame is equal to frame == frame.sprite.frames[frameNumber].","output":"local frameNumber = frame.frameNumber","source":"docs","sourceUrl":"https://www.aseprite.org/api/frame#frameframenumber","user":"dev"}
{"instruction":"Gets or sets the duration of this frame in the animation in seconds. E.g. 0.3333 means that this frame will be 1/3 of a second in the screen when the animation is being played.","output":"local duration = frame.duration\nframe.duration = duration","source":"docs","sourceUrl":"https://www.aseprite.org/api/frame#frameduration","user":"dev"}
{"instruction":"Returns Frame object in the previous frame number or nil if this is the first frame.","output":"Frame.previous","source":"docs","sourceUrl":"https://www.aseprite.org/api/frame#frameprevious","user":"dev"}
{"instruction":"Returns Frame object in the next frame number or nil if this is the last frame.","output":"Frame.next","source":"docs","sourceUrl":"https://www.aseprite.org/api/frame#framenext","user":"dev"}
{"instruction":"The GraphicsContext object provides methods for drawing images, text and shapes on the canvas.","output":"local dlg = Dialog()\ndlg:canvas{\n  onpaint = function(ev)\n    local gc = ev.context\n    -- gc is a GraphicsContext\n  end\n}","source":"docs","sourceUrl":"https://www.aseprite.org/api/graphicscontext#graphicscontext","user":"dev"}
{"instruction":"Gets the width of the visible area in pixels. Canvas dimensions change when the dialog is resized by the user.","output":"local width = gc.width","source":"docs","sourceUrl":"https://www.aseprite.org/api/graphicscontext#graphicscontextwidth","user":"dev"}
{"instruction":"Gets the height of the visible area in pixels. Canvas dimensions change when the dialog is resized by the user.","output":"local height = gc.height","source":"docs","sourceUrl":"https://www.aseprite.org/api/graphicscontext#graphicscontextheight","user":"dev"}
{"instruction":"Gets or sets whether paths and shapes are painted on using antialiasing.","output":"local aa = gc.antialias\ngc.antialias = true","source":"docs","sourceUrl":"https://www.aseprite.org/api/graphicscontext#graphicscontextantialias","user":"dev"}
{"instruction":"Gets or sets the color to paint with the path functions.","output":"local color = gc.color\ngc.color = Color(255)","source":"docs","sourceUrl":"https://www.aseprite.org/api/graphicscontext#graphicscontextcolor","user":"dev"}
{"instruction":"Gets or sets the width of lines painted when calling GraphicsContext:stroke() or GraphicsContext:strokeRect().","output":"local sw = gc.strokeWidth\ngc.strokeWidth = 10","source":"docs","sourceUrl":"https://www.aseprite.org/api/graphicscontext#graphicscontextstrokewidth","user":"dev"}
{"instruction":"Blend mode used in stroke(), fill()), drawImage(), etc.","output":"local bm = gc.blendMode\ngc.blendMode = BlendMode.NORMAL","source":"docs","sourceUrl":"https://www.aseprite.org/api/graphicscontext#graphicscontextblendmode","user":"dev"}
{"instruction":"Opacity used in stroke(), fill()), drawImage(), etc.\n\nopacity: 0 completelly transparenty, 255 completelly opaque.","output":"local opacity = gc.opacity\nassert(opacity \u003e= 0 and opacity \u003c= 255)\ngc.opacity = newOpacity","source":"docs","sourceUrl":"https://www.aseprite.org/api/graphicscontext#graphicscontextopacity","user":"dev"}
{"instruction":"It has the same functionality as app.theme, with the only difference that the values returned by accessing dimensions or style metrics data are not affected by the current UI Scale setting. This is useful when you are drawing on a dialog canvas's GraphicsContext with autoScaling enabled, so you don't have to worry about adjusting sizes and measures when painting on the canvas using the current theme.","output":"local dlg = Dialog()\ndlg:canvas{\n  onpaint = function(ev)\n      local b1 = app.theme:styleMetrics(\"button\")\n      local b2 = ev.context.theme:styleMetrics(\"button\")\n      print(\"app.theme:     \" .. b1.border.top .. \" \" .. b1.border.left .. \" \" .. b1.border.bottom .. \" \" .. b1.border.right)\n      print(\"context.theme: \" .. b2.border.top .. \" \" .. b2.border.left .. \" \" .. b2.border.bottom .. \" \" .. b2.border.right)\n      -- Console's output:\n      -- app.theme:     8 8 12 8\n      -- context.theme: 4 4 6 4\n  end\n}","source":"docs","sourceUrl":"https://www.aseprite.org/api/graphicscontext#graphicscontexttheme","user":"dev"}
{"instruction":"Saves the current state of the canvas to restore it later, including:\n\ncolor\nopacity\nblendMode\nstroke width\nclipping region","output":"gc:save()","source":"docs","sourceUrl":"https://www.aseprite.org/api/graphicscontext#graphicscontextsave","user":"dev"}
{"instruction":"Restores the last saved canvas state.","output":"gc:restore()","source":"docs","sourceUrl":"https://www.aseprite.org/api/graphicscontext#graphicscontextrestore","user":"dev"}
{"instruction":"Sets the current path as a clipping area for following drawing operations.","output":"gc:clip()","source":"docs","sourceUrl":"https://www.aseprite.org/api/graphicscontext#graphicscontextclip","user":"dev"}
{"instruction":"Paints the edges of the given rectangle with the current color and current width.","output":"gc:strokeRect(rectangle)","source":"docs","sourceUrl":"https://www.aseprite.org/api/graphicscontext#graphicscontextstrokerect","user":"dev"}
{"instruction":"Fills the given rectangle with the current color.","output":"gc:fillRect(rectangle)","source":"docs","sourceUrl":"https://www.aseprite.org/api/graphicscontext#graphicscontextfillrect","user":"dev"}
{"instruction":"Draws on the canvas the given text string, at a position specified by the xy-coordinates.","output":"gc:fillText(string, x, y)","source":"docs","sourceUrl":"https://www.aseprite.org/api/graphicscontext#graphicscontextfilltext","user":"dev"}
{"instruction":"Returns the size of the given text using the current font.","output":"local size = gc:measureText(string)","source":"docs","sourceUrl":"https://www.aseprite.org/api/graphicscontext#graphicscontextmeasuretext","user":"dev"}
{"instruction":"Draws on the canvas the given image.\n\nIf given xy-coordinates, the full image will be drawn at the specified position, in it's original scale.\n\nIf given source and destination bounds (or their respective values), a part of the image is drawn (specified by the srcRect, or srcX/srcY/srcW/srcH, relative to the image) on the canvas (specified by the dstRect or dstX/dstY/dstW/dstH). This allows drawing only a part of and/or scaling the image.","output":"gc:drawImage(image, x, y)\ngc:drawImage(image, srcRect, dstRect)\ngc:drawImage(image, srcX, srcY, srcW, srcH, dstX, dstY, dstW, dstH)","source":"docs","sourceUrl":"https://www.aseprite.org/api/graphicscontext#graphicscontextdrawimage","user":"dev"}
{"instruction":"Draws on the canvas a theme part specified by the given partId, at a given Point or at specified xy-coordinates.\n\nList of possible parts can be found in theme.xml.","output":"gc:drawThemeImage(partId, point)\ngc:drawThemeImage(partId, x, y)","source":"docs","sourceUrl":"https://www.aseprite.org/api/graphicscontext#graphicscontextdrawthemeimage","user":"dev"}
{"instruction":"Draws on the canvas a theme part specified by the given partId, filling a given Rectangle or at specified xy-coordinates, with given width and height. This method uses nine-slice scaling for parts that have their Slice's center defined.\n\nList of possible parts can be found in theme.xml.","output":"gc:drawThemeRect(partId, rectangle)\ngc:drawThemeRect(partId, x, y, w, h)","source":"docs","sourceUrl":"https://www.aseprite.org/api/graphicscontext#graphicscontextdrawthemerect","user":"dev"}
{"instruction":"Starts a new path, emptying the list of tracked sub-paths. This is the first method to call when drawing paths.","output":"gc:beginPath()","source":"docs","sourceUrl":"https://www.aseprite.org/api/graphicscontext#graphicscontextbeginpath","user":"dev"}
{"instruction":"Closes the current sub-path by connecting the current point with the first point of the current sub-path.","output":"gc:closePath()","source":"docs","sourceUrl":"https://www.aseprite.org/api/graphicscontext#graphicscontextclosepath","user":"dev"}
{"instruction":"Starts a new sub-path at the specified xy-coordinates. This is the second method to call (after GraphicsContext:beginPath()) when drawing paths.","output":"gc:moveTo(x, y)","source":"docs","sourceUrl":"https://www.aseprite.org/api/graphicscontext#graphicscontextmoveto","user":"dev"}
{"instruction":"Adds a line to the current sub-path, from the last point to the specified xy-coordinates.\n\nNote: This method doesn't draw on the canvas, to draw the path onto the canvas call GraphicsContext:stroke() or GraphicsContext:fill().","output":"gc:lineTo(x, y)","source":"docs","sourceUrl":"https://www.aseprite.org/api/graphicscontext#graphicscontextlineto","user":"dev"}
{"instruction":"Adds a cubic Bézier curve to the current sub-path, from the last point to the specified xy-coordinates, with two control points (specified by cp1x/cp1y and cp2x/cp2y coordinates).\n\nNote: This method doesn't draw on the canvas, to draw the path onto the canvas call GraphicsContext:stroke() or GraphicsContext:fill().","output":"gc:cubicTo(cp1x, cp1y, cp2x, cp2y, x, y)","source":"docs","sourceUrl":"https://www.aseprite.org/api/graphicscontext#graphicscontextcubicto","user":"dev"}
{"instruction":"Adds an oval enclosed by the given Rectangle to the current sub-path.\n\nNote: This method doesn't draw on the canvas, to draw the path onto the canvas call GraphicsContext:stroke() or GraphicsContext:fill().","output":"gc:oval(rectangle)","source":"docs","sourceUrl":"https://www.aseprite.org/api/graphicscontext#graphicscontextoval","user":"dev"}
{"instruction":"Adds a given Rectangle to the current sub-path.\n\nNote: This method doesn't draw on the canvas, to draw the path onto the canvas call GraphicsContext:stroke() or GraphicsContext:fill().","output":"gc:rect(rectangle)","source":"docs","sourceUrl":"https://www.aseprite.org/api/graphicscontext#graphicscontextrect","user":"dev"}
{"instruction":"Adds a given Rectangle to the current sub-path with rounded corners.\n\nIf a single radius is specified, a rectangle with circular corners is created. This method can be used to easily draw circles.\n\nIf two radii are specified, a rectangle with elliptical corners is created.\n\nNote: This method doesn't draw on the canvas, to draw the path onto the canvas call GraphicsContext:stroke() or GraphicsContext:fill().","output":"gc:roundedRect(rectangle, r)\ngc:roundedRect(rectangle, rx, ry)","source":"docs","sourceUrl":"https://www.aseprite.org/api/graphicscontext#graphicscontextroundedrect","user":"dev"}
{"instruction":"Paints the edges of the current path with the current color and current width.","output":"gc:stroke()","source":"docs","sourceUrl":"https://www.aseprite.org/api/graphicscontext#graphicscontextstroke","user":"dev"}
{"instruction":"Fills the current path with the current color.","output":"gc:fill()","source":"docs","sourceUrl":"https://www.aseprite.org/api/graphicscontext#graphicscontextfill","user":"dev"}
{"instruction":"Creates a new image with the given width and height. The color mode is optional, RGB by default.\n\nThe spec parameter is an image specification object.\n\nIf you specify otherImage, it's equivalent to use otherImage:clone(). If you specify Image(otherImage, rectangle) this will create a copy of the specified rectangle of otherImage. Image(otherImage, rectangle) may return nil if the rectangle is empty (i.e., if its width and/or height are equal to or less than zero).\n\nIf a sprite is given, the image will be a render of the first frame of the sprite. Note: You can use Image:drawSprite() to draw other frame.\n\nIf fromFile is given, it indicates a file name (a string) and it will create an image loading the first frame of the given file.","output":"local image = Image(width, height [, colorMode])\nlocal image = Image(spec)\nlocal image = Image(sprite)\nlocal image = Image(otherImage)\nlocal image = Image(otherImage, rectangle)\nlocal image = Image{ fromFile=filename }","source":"docs","sourceUrl":"https://www.aseprite.org/api/image#image","user":"dev"}
{"instruction":"Creates a copy of the given image. You can use the Image(otherImage) constructor for the same behavior.\n\nThe new image is unrelated to the sprite, but it can be used to update the image in a transaction. E.g. You clone an image, modify the pixels from the copy, and then you patch the image.","output":"local copy = image:clone()","source":"docs","sourceUrl":"https://www.aseprite.org/api/image#imageclone","user":"dev"}
{"instruction":"Internal unique ID (an integer) assigned to this image inside the program. You can use it to identify this image in your script.","output":"local id = image.id","source":"docs","sourceUrl":"https://www.aseprite.org/api/image#imageid","user":"dev"}
{"instruction":"Internal version (an integer) assigned to this image inside the program. It's always incremented when the image is modified. Can be used to cache some complex calculation related to the image and recalculate it only if the version is modified (which means the pixels are modified).","output":"local version = image.version","source":"docs","sourceUrl":"https://www.aseprite.org/api/image#imageversion","user":"dev"}
{"instruction":"Image.width","output":"local w = image.width","source":"docs","sourceUrl":"https://www.aseprite.org/api/image#imagewidth","user":"dev"}
{"instruction":"Image.height","output":"local h = image.height","source":"docs","sourceUrl":"https://www.aseprite.org/api/image#imageheight","user":"dev"}
{"instruction":"Returns a rectangle with the bounds of the image with origin equal to (0, 0).","output":"local rectangle = image.bounds","source":"docs","sourceUrl":"https://www.aseprite.org/api/image#imagebounds","user":"dev"}
{"instruction":"Image color mode.","output":"local colorMode = image.colorMode","source":"docs","sourceUrl":"https://www.aseprite.org/api/image#imagecolormode","user":"dev"}
{"instruction":"The specification for this image.","output":"local spec = image.spec","source":"docs","sourceUrl":"https://www.aseprite.org/api/image#imagespec","user":"dev"}
{"instruction":"Returns the cel to which this image belongs or nil if this image is not associated to a cel.","output":"local cel = image.cel","source":"docs","sourceUrl":"https://www.aseprite.org/api/image#imagecel","user":"dev"}
{"instruction":"A byte string that contains raw image data. The layout depends on the image's color mode. It can be used with the usual string methods, or split into bytes using string.bytes. For editing the image, it's easier to use image:pixels().\n\nThe number of bytes must be equal to image.rowStride * image.height.","output":"local s = image.bytes\nimage.bytes = s","source":"docs","sourceUrl":"https://www.aseprite.org/api/image#imagebytes","user":"dev"}
{"instruction":"Number of bytes for each row in the image. Each image has a total of image.rowStride * image.height bytes. It's useful if you are going to get or set the Image.bytes property manually.","output":"local numberOfBytesPerRow = image.rowStride","source":"docs","sourceUrl":"https://www.aseprite.org/api/image#imagerowstride","user":"dev"}
{"instruction":"Number of bytes per pixel.\n\nThe number of visible pixels per row is Image.width, the number of bytes per row is Image.rowStride, the number of \"visible bytes\" is image.width * image.bytesPerPixel, and the number of \"pixels per row\" (visible pixels + hidden/just for alignment) is image.rowStride / image.bytesPerPixel.","output":"Image.bytesPerPixel","source":"docs","sourceUrl":"https://www.aseprite.org/api/image#imagebytesperpixel","user":"dev"}
{"instruction":"Clears the image pixels in a given bounds with a the given color. The entire image is erased by default if no bounds present. image.spec.transparentColor if no color specified.","output":"image:clear([ bounds, color ])","source":"docs","sourceUrl":"https://www.aseprite.org/api/image#imageclear","user":"dev"}
{"instruction":"Sets the pixel in the xy-coordinate to the given integer pixel value. The xy-coordinate is relative to the image, so pixel (0, 0) is the first pixel at the top-left coorner in the image, not in the sprite canvas.\n\nWarning: This method doesn't create undo information, you should clone the image and then patch it to get proper undo/redo information.","output":"image:drawPixel(x, y, color)","source":"docs","sourceUrl":"https://www.aseprite.org/api/image#imagedrawpixel","user":"dev"}
{"instruction":"Returns a integer pixel value for the given xy-coordinate related to the \"Image\" itself. The returned value will depend on the color mode of the image.\n\nDo NOT confuse with the absolute xy-coordinate in the Canvas. In the following example, we show the differences between getPixel(), Cel.bounds and Cel.position","output":"local pixelValue = image:getPixel(x, y)","source":"docs","sourceUrl":"https://www.aseprite.org/api/image#imagegetpixel","user":"dev"}
{"instruction":"Copies/draws the given sourceImage image over destinationImage. If position is a point, it will draw the sourceImage in the given position (Point(0, 0) as default). opacity is an integer (0 to 255) that defines a general opacity level of the sourceImage (255 by default). blendMode is the blending method to compose the sourceImage over the destinationImage (BlendMode.NORMAL as default).\n\nWarning: If the image is associated with a Cel, this method generates undo information, so you could use it as an individual operation or in a transaction.","output":"destinationImage:drawImage(sourceImage [, position, opacity, blendMode] )","source":"docs","sourceUrl":"https://www.aseprite.org/api/image#imagedrawimage","user":"dev"}
{"instruction":"Draws the given sourceSprite frame number into the destinationImage. If position is a point, it will draw the sourceSprite in the given position.\n\nWarning: If the image is associated with a Cel, this method generates undo information, so you could use it as an individual operation or in a transaction.","output":"destinationImage:drawSprite(sourceSprite, frameNumber, [, position ] )","source":"docs","sourceUrl":"https://www.aseprite.org/api/image#imagedrawsprite","user":"dev"}
{"instruction":"Returns true if both images looks the same (spec is equal and all pixels are the same).","output":"if imageA:isEqual(imageB) then\n  print(\"Both images are equal\")\nend","source":"docs","sourceUrl":"https://www.aseprite.org/api/image#imageisequal","user":"dev"}
{"instruction":"Returns true if all pixels in the image are equal to the transparent color.","output":"local result = image:isEmpty()","source":"docs","sourceUrl":"https://www.aseprite.org/api/image#imageisempty","user":"dev"}
{"instruction":"Returns true if all pixels in the image are equal to the given color (which can be a pixel color or a color).","output":"local result = image:isPlain(color)","source":"docs","sourceUrl":"https://www.aseprite.org/api/image#imageisplain","user":"dev"}
{"instruction":"Returns a pixel iterator for the whole image or the given rectangle\n\nA pixelValue! can be interpreted with the app.pixelColor functions.","output":"iterator = image:pixels()\niterator = image:pixels(rectangle)","source":"docs","sourceUrl":"https://www.aseprite.org/api/image#imagepixels","user":"dev"}
{"instruction":" you can use the iterator to read or change pixel values in this way:","output":"for it in image:pixels() do\n  local pixelValue = it() -- get pixel\n  it(pixelValue)          -- set pixel\n  print(it.x, it.y)       -- get pixel x,y coordinates\nend","source":"docs","sourceUrl":"https://www.aseprite.org/api/image#imagepixels","user":"user"}
{"instruction":"Same as Image:drawPixel().","output":"Image:putPixel()","source":"docs","sourceUrl":"https://www.aseprite.org/api/image#imageputpixel","user":"dev"}
{"instruction":"Now it's Image:drawImage(). This function is deprecated and was renamed to avoid confusion with the behavior cel.image.","output":"Image:putImage()","source":"docs","sourceUrl":"https://www.aseprite.org/api/image#imageputimage","user":"dev"}
{"instruction":"Now it's Image:drawSprite() to match Image:drawImage() name.","output":"Image:putSprite()","source":"docs","sourceUrl":"https://www.aseprite.org/api/image#imageputsprite","user":"dev"}
{"instruction":"Saves the image as a sprite in the given filename.\n\nTo save an indexed image we need to specify a palette parameter (a Palette object). If we don't specify a palette parameter, in case that the image is related to a Cel, we'll use the palette of the Cel's Sprite.","output":"image:saveAs(filename)\nimage:saveAs{ filename=string,\n              palette=Palette }","source":"docs","sourceUrl":"https://www.aseprite.org/api/image#imagesaveas","user":"dev"}
{"instruction":"Resizes the image. The pivot is Point(0, 0) by default (i.e. the image right and bottom sides will be increased, and the top-left corner will be in the same place).","output":"image:resize(width, height)\nimage:resize{ width=integer, height=integer, ... }\nimage:resize{ size=Size(width, height), ... }\nimage:resize{ ..., method='bilinear' | 'rotsprite' }\nimage:resize{ ..., pivot=Point(x, y) }","source":"docs","sourceUrl":"https://www.aseprite.org/api/image#imageresize","user":"dev"}
{"instruction":"Returns the shrunken bounds (a rectangle) of the image removing all the empty space of borders using the mask color or the given reference color in refColor.","output":"local rectangle = image:shrinkBounds()\nlocal rectangle = image:shrinkBounds(refColor)","source":"docs","sourceUrl":"https://www.aseprite.org/api/image#imageshrinkbounds","user":"dev"}
{"instruction":"Creates a new ImageSpec instance.\n\nWhen no arguments are given, defaults to a width and height of 1, with the transparent color index set to zero and RGB color mode.","output":"ImageSpec()\nImageSpec(otherImageSpec)\nImageSpec{\n    width=number,\n    height=number,\n    colorMode=number,\n    transparentColor=number }","source":"docs","sourceUrl":"https://www.aseprite.org/api/imagespec#imagespec","user":"dev"}
{"instruction":"Gets or sets the color mode of the image or sprite.","output":"local colorMode = spec.colorMode\nspec.colorMode = colorMode","source":"docs","sourceUrl":"https://www.aseprite.org/api/imagespec#imagespeccolormode","user":"dev"}
{"instruction":"Gets or sets the width of the image or sprite.","output":"local w = spec.width\nspec.width = w","source":"docs","sourceUrl":"https://www.aseprite.org/api/imagespec#imagespecwidth","user":"dev"}
{"instruction":"Gets or sets the height of the image or sprite.","output":"local h = spec.height\nspec.height = h","source":"docs","sourceUrl":"https://www.aseprite.org/api/imagespec#imagespecheight","user":"dev"}
{"instruction":"Gets or sets the color space for an image or sprite.","output":"local colorSpace = spec.colorSpace\nspec.colorSpace = ColorSpace{ sRGB=true }","source":"docs","sourceUrl":"https://www.aseprite.org/api/imagespec#imagespeccolorspace","user":"dev"}
{"instruction":"Gets or sets the index that refers a transparent color in a palette when the image or sprite uses indexed color mode.","output":"local mask = spec.transparentColor\nspec.transparentColor = mask","source":"docs","sourceUrl":"https://www.aseprite.org/api/imagespec#imagespectransparentcolor","user":"dev"}
{"instruction":"Number of times the key was autorepeated. This can happen when the user presses and holds a key.","output":"KeyEvent.repeatCount","source":"docs","sourceUrl":"https://www.aseprite.org/api/keyevent#keyeventrepeatcount","user":"dev"}
{"instruction":"A string containing the pressed/released Unicode character.","output":"KeyEvent.key","source":"docs","sourceUrl":"https://www.aseprite.org/api/keyevent#keyeventkey","user":"dev"}
{"instruction":"KeyEvent.code\nA string that identifies the pressed/released key, similar to the values found in https://developer.mozilla.org/en-US/docs/Web/API/UI_Events/Keyboard_event_code_values, one of the following values:","output":"  \"Unidentified\"\n  \"KeyA\"\n  \"KeyB\"\n  \"KeyC\"\n  \"KeyD\"\n  \"KeyE\"\n  \"KeyF\"\n  \"KeyG\"\n  \"KeyH\"\n  \"KeyI\"\n  \"KeyJ\"\n  \"KeyK\"\n  \"KeyL\"\n  \"KeyM\"\n  \"KeyN\"\n  \"KeyO\"\n  \"KeyP\"\n  \"KeyQ\"\n  \"KeyR\"\n  \"KeyS\"\n  \"KeyT\"\n  \"KeyU\"\n  \"KeyV\"\n  \"KeyW\"\n  \"KeyX\"\n  \"KeyY\"\n  \"KeyZ\"\n  \"Digit0\"\n  \"Digit1\"\n  \"Digit2\"\n  \"Digit3\"\n  \"Digit4\"\n  \"Digit5\"\n  \"Digit6\"\n  \"Digit7\"\n  \"Digit8\"\n  \"Digit9\"\n  \"Numpad0\"\n  \"Numpad1\"\n  \"Numpad2\"\n  \"Numpad3\"\n  \"Numpad4\"\n  \"Numpad5\"\n  \"Numpad6\"\n  \"Numpad7\"\n  \"Numpad8\"\n  \"Numpad9\"\n  \"F1\"\n  \"F2\"\n  \"F3\"\n  \"F4\"\n  \"F5\"\n  \"F6\"\n  \"F7\"\n  \"F8\"\n  \"F9\"\n  \"F10\"\n  \"F11\"\n  \"F12\"\n  \"Escape\"\n  \"Backquote\"\n  \"Minus\"\n  \"Equal\"\n  \"Backspace\"\n  \"Tab\"\n  \"BracketLeft\"\n  \"BracketRight\"\n  \"Enter\"\n  \"Semicolon\"\n  \"Quote\"\n  \"Backslash\"\n  \"Comma\"\n  \"Period\"\n  \"Slash\"\n  \"Space\"\n  \"Insert\"\n  \"Delete\"\n  \"Home\"\n  \"End\"\n  \"PageUp\"\n  \"PageDown\"\n  \"ArrowLeft\"\n  \"ArrowRight\"\n  \"ArrowUp\"\n  \"ArrowDown\"\n  \"NumpadDivide\"\n  \"NumpadMultiply\"\n  \"NumpadSubtract\"\n  \"NumpadAdd\"\n  \"NumpadComma\"\n  \"NumpadEnter\"\n  \"PrintScreen\"\n  \"Pause\"\n  \"IntlYen\"\n  \"KanaMode\"\n  \"Convert\"\n  \"NonConvert\"\n  \"NumpadEqual\"\n  \"Backquote\"\n  \"ShiftLeft\"\n  \"ShiftRight\"\n  \"ControlLeft\"\n  \"ControlRight\"\n  \"AltLeft\"\n  \"AltRight\"\n  \"MetaLeft\"\n  \"MetaRight\"\n  \"ContextMenu\"\n  \"MetaLeft\"\n  \"ScrollLock\"\n  \"NumLock\"\n  \"CapsLock\"","source":"docs","sourceUrl":"https://www.aseprite.org/api/keyevent#keyeventcode","user":"dev"}
{"instruction":"True if the Alt key was pressed when the event occurs.","output":"KeyEvent.altKey","source":"docs","sourceUrl":"https://www.aseprite.org/api/keyevent#keyeventaltkey","user":"dev"}
{"instruction":"True if the Windows key (or Command key on macOS) was pressed when the event occurs.","output":"KeyEvent.metaKey","source":"docs","sourceUrl":"https://www.aseprite.org/api/keyevent#keyeventmetakey","user":"dev"}
{"instruction":"True if the Ctrl key was pressed when the event occurs.","output":"KeyEvent.ctrlKey","source":"docs","sourceUrl":"https://www.aseprite.org/api/keyevent#keyeventctrlkey","user":"dev"}
{"instruction":"True if the Shift key was pressed when the event occurs.","output":"KeyEvent.shiftKey","source":"docs","sourceUrl":"https://www.aseprite.org/api/keyevent#keyeventshiftkey","user":"dev"}
{"instruction":"True if the Space key was pressed when the event occurs.","output":"KeyEvent.spaceKey","source":"docs","sourceUrl":"https://www.aseprite.org/api/keyevent#keyeventspacekey","user":"dev"}
{"instruction":"Stops propagating this event to other parent widget/main Aseprite window. Use this in case that your canvas widget used the key and you want to avoid triggering a command with a keyboard shortcut.","output":"KeyEvent:stopPropagation()","source":"docs","sourceUrl":"https://www.aseprite.org/api/keyevent#keyeventstoppropagation","user":"dev"}
{"instruction":"Gets the sprite to which this layer belongs.","output":"Layer.sprite","source":"docs","sourceUrl":"https://www.aseprite.org/api/layer#layersprite","user":"dev"}
{"instruction":"Gets or sets the layer name, a string.","output":"Layer.name","source":"docs","sourceUrl":"https://www.aseprite.org/api/layer#layername","user":"dev"}
{"instruction":"Gets or sets the layer opacity, a value from 0 to 255. The layer is completely transparent when the value is 0; opaque when the value is 255. When the layer is a background, returns 255.\n\nWhen the layer is a group, returns nil.","output":"local opacity = layer.opacity\nlayer.opacity = newOpacity","source":"docs","sourceUrl":"https://www.aseprite.org/api/layer#layeropacity","user":"dev"}
{"instruction":"Gets or sets the layer blending mode (how colors are blend with the layer below). It's expressed as an integer or a value from the BlendMode enumeration.\n\nWhen the layer is a group, this property is nil.","output":"local blendMode = layer.blendMode\nlayer.blendMode = newBlendMode","source":"docs","sourceUrl":"https://www.aseprite.org/api/layer#layerblendmode","user":"dev"}
{"instruction":"If a layer is a group, gets the table of child layers for which the group serves as a parent. If the layer is not a group, returns nil.","output":"Layer.layers","source":"docs","sourceUrl":"https://www.aseprite.org/api/layer#layerlayers","user":"dev"}
{"instruction":"Gets or sets the layer's parent. The parent may be either a sprite or a group layer.\n\nUpon setting the parent, the child layer is moved to the top of the parent's layer stack. Throws an error if the parent layer is not a group or if the setter tries to parent a layer to itself.","output":"local spriteOrLayerGroup = layer.parent\nlayer.parent = sprite\nlayer.parent = group","source":"docs","sourceUrl":"https://www.aseprite.org/api/layer#layerparent","user":"dev"}
{"instruction":"Gets or sets the layer's index in its parent's layers table. In other words, this is the layer's place in the local stack. Layers stack in descending order. For example, a layer with index 1 will lie beneath a layer with index 2, assuming the layers share the same parent.","output":"local index = layer.stackIndex\nlayer.stackIndex = newPosition","source":"docs","sourceUrl":"https://www.aseprite.org/api/layer#layerstackindex","user":"dev"}
{"instruction":"Gets whether or not the layer contains cels with images.","output":"Layer.isImage","source":"docs","sourceUrl":"https://www.aseprite.org/api/layer#layerisimage","user":"dev"}
{"instruction":"Gets whether or not the layer is a group and has the capacity to be a parent to other layers. A layer may be a group, yet have no children; in such a case, its layers property will return a table of zero length.\n\nGroups may nest within groups, creating a hierarchy.","output":"Layer.isGroup","source":"docs","sourceUrl":"https://www.aseprite.org/api/layer#layerisgroup","user":"dev"}
{"instruction":"Returns true if the layer is a tilemap (contains a tileset)","output":"Layer.isTilemap","source":"docs","sourceUrl":"https://www.aseprite.org/api/layer#layeristilemap","user":"dev"}
{"instruction":"Gets whether or not a layer supports transparency. The opposite of the property Layer.isBackground. For indexed color mode, the layer may contain images with a transparent color index. For RGB or grayscale color mode, the layer may contain images with an alpha channel.\n\nReturns true if the layer is a group.\n\nFor context, see the general documentation on layers.","output":"Layer.isTransparent","source":"docs","sourceUrl":"https://www.aseprite.org/api/layer#layeristransparent","user":"dev"}
{"instruction":"Gets whether or not a layer is a background. The opposite of the property Layer.isTransparent. Background layers do not contain images which support transparency. Returns false if the layer is a group.\n\nFor context, see the general documentation on layers.","output":"Layer.isBackground","source":"docs","sourceUrl":"https://www.aseprite.org/api/layer#layerisbackground","user":"dev"}
{"instruction":"Gets or sets whether a layer is editable, unlocked in other words.\n\nIt describes only the group layer's local editability, not whether any hierarchy that contains it is editable. See Layer.isVisible for an example snippet using a similar property.","output":"Layer.isEditable","source":"docs","sourceUrl":"https://www.aseprite.org/api/layer#layeriseditable","user":"dev"}
{"instruction":"Gets or sets whether or not the layer is visible.\n\nIt describes only the layer's local visibility, not its visibility with respect to the hierarchy that contains it","output":"local visible = layer.isVisible\nlayer.isVisible = visible","source":"docs","sourceUrl":"https://www.aseprite.org/api/layer#layerisvisible","user":"dev"}
{"instruction":"in the following code layer1.isVisible will be true (even when the parnet group visibility is false):","output":"local sprite = app.sprite\nlocal layerGroup = sprite:newGroup()\nlocal layers = sprite.layers\nlocal layer1 = layers[1]\nlayer1.parent = layerGroup\nlayerGroup.isVisible = false\nlayer1.isVisible = true\nprint(layer1.isVisible)","source":"docs","sourceUrl":"https://www.aseprite.org/api/layer#layerisvisible","user":"user"}
{"instruction":"Gets or sets whether a layer biases toward linked cels when a new cel is created in the timeline.\n\nReturns false if the layer is a group.\n\nFor context, see the general documentation on continuous layers.","output":"Layer.isContinuous","source":"docs","sourceUrl":"https://www.aseprite.org/api/layer#layeriscontinuous","user":"dev"}
{"instruction":"Gets or sets whether or not a group layer is collapsed, i.e., whether its child layers are hidden in the timeline. The opposite of the property Layer.isExpanded.\n\nIt describes only the group layer's local collapse, not whether any hierarchy that contains it is collapsed. See Layer.isVisible for an example snippet using a similar property.","output":"Layer.isCollapsed","source":"docs","sourceUrl":"https://www.aseprite.org/api/layer#layeriscollapsed","user":"dev"}
{"instruction":"Gets or sets whether or not a group layer is expanded, meaning whether its child layers are visible in the timeline. The opposite of the property Layer.isCollapsed.\n\nIt describes only the group layer's local expansion, not whether any hierarchy that contains it is expanded. See Layer.isVisible for an example snippet using a similar property.","output":"Layer.isExpanded","source":"docs","sourceUrl":"https://www.aseprite.org/api/layer#layerisexpanded","user":"dev"}
{"instruction":"Gets whether or not the layer is a reference layer. You cannot change the value of this property.","output":"local isRef = layer.isReference","source":"docs","sourceUrl":"https://www.aseprite.org/api/layer#layerisreference","user":"dev"}
{"instruction":"Gets a table of cels in the layer. If the layer is a group, this property will return a table of zero length.\n\nSee also the Layer:cel() function.","output":"Layer.cels","source":"docs","sourceUrl":"https://www.aseprite.org/api/layer#layercels","user":"dev"}
{"instruction":"Gets or sets the user-defined color of this layer in the timeline.","output":"local color = layer.color\nlayer.color = color","source":"docs","sourceUrl":"https://www.aseprite.org/api/layer#layercolor","user":"dev"}
{"instruction":"Gets or sets the user-defined data related to this layer (a text string).","output":"local data = layer.data\nlayer.data = data","source":"docs","sourceUrl":"https://www.aseprite.org/api/layer#layerdata","user":"dev"}
{"instruction":"Access user-defined and extension-defined properties of this layer.","output":"Layer.properties","source":"docs","sourceUrl":"https://www.aseprite.org/api/layer#layerproperties","user":"dev"}
{"instruction":"Returns a cel, if any, at the intersection of the layer and a frame. The frame may be either a frame object or its frame number, an integer. If there is no cel at that intersection, returns nil.","output":"local cel = layer:cel(frameNumber)\nassert(cel == layer:cel(sprite.frames[frameNumber]))","source":"docs","sourceUrl":"https://www.aseprite.org/api/layer#layercel","user":"dev"}
{"instruction":"Gets or sets the tileset associated to this layer only when it's a tilemap (returns nil in other case).","output":"local tileset = layer.tileset\nlayer.tileset = newTileset","source":"docs","sourceUrl":"https://www.aseprite.org/api/layer#layertileset","user":"dev"}
{"instruction":"The (x,y) position of the mouse when the event happens, in client coordinates, where (0,0) is the top-left corner of the canvas widget.","output":"  onmousedown=function(ev)\n    print('mouse button pressed in', ev.x, ev.y)\n  end","source":"docs","sourceUrl":"https://www.aseprite.org/api/mouseevent#mouseeventx","user":"dev"}
{"instruction":"See MouseEvent.x","output":"MouseEvent.y","source":"docs","sourceUrl":"https://www.aseprite.org/api/mouseevent#mouseeventy","user":"dev"}
{"instruction":"The MouseButton pressed or released by the user.","output":"MouseEvent.button","source":"docs","sourceUrl":"https://www.aseprite.org/api/mouseevent#mouseeventbutton","user":"dev"}
{"instruction":"The pressure of pen when the event is generated from a stylus.","output":"MouseEvent.pressure","source":"docs","sourceUrl":"https://www.aseprite.org/api/mouseevent#mouseeventpressure","user":"dev"}
{"instruction":"Only for the onwheel event.","output":"MouseEvent.deltaX","source":"docs","sourceUrl":"https://www.aseprite.org/api/mouseevent#mouseeventdeltax","user":"dev"}
{"instruction":"Only for the onwheel event.","output":"MouseEvent.deltaY","source":"docs","sourceUrl":"https://www.aseprite.org/api/mouseevent#mouseeventdeltay","user":"dev"}
{"instruction":"True if the Alt key was pressed when the event occurs.","output":"MouseEvent.altKey","source":"docs","sourceUrl":"https://www.aseprite.org/api/mouseevent#mouseeventaltkey","user":"dev"}
{"instruction":"True if the Windows key (or Command key on macOS) was pressed when the event occurs.","output":"MouseEvent.metaKey","source":"docs","sourceUrl":"https://www.aseprite.org/api/mouseevent#mouseeventmetakey","user":"dev"}
{"instruction":"True if the Ctrl key was pressed when the event occurs.","output":"MouseEvent.ctrlKey","source":"docs","sourceUrl":"https://www.aseprite.org/api/mouseevent#mouseeventctrlkey","user":"dev"}
{"instruction":"True if the Shift key was pressed when the event occurs.","output":"MouseEvent.shiftKey","source":"docs","sourceUrl":"https://www.aseprite.org/api/mouseevent#mouseeventshiftkey","user":"dev"}
{"instruction":"True if the Space key was pressed when the event occurs.","output":"MouseEvent.spaceKey","source":"docs","sourceUrl":"https://www.aseprite.org/api/mouseevent#mouseeventspacekey","user":"dev"}
{"instruction":"Creates a new palette. By default it will contain 256 colors, but you can specify a numberOfColors (integer value).\n\notherPalette can be another palette object to create a copy of it.\n\nIf fromFile is given, the palette is loaded from the file name.\n\nIf fromResource is given, the resourceID is an ID specified in one of the extensions palette (e.g. DB16, DB32, Solarized).","output":"local palette = Palette()\nlocal palette = Palette(numberOfColors)\nlocal palette = Palette(otherPalette)\nlocal palette = Palette{ fromFile=filename }\nlocal palette = Palette{ fromResource=resourceID }","source":"docs","sourceUrl":"https://www.aseprite.org/api/palette#palette","user":"dev"}
{"instruction":"Returns the number of colors in the palette (remember that valid indexes in the palette go from 0 to ncolors-1).","output":"local ncolors = #palette","source":"docs","sourceUrl":"https://www.aseprite.org/api/palette#palette","user":"dev"}
{"instruction":"Changes the number of the palette colors to ncolors (an integer value).","output":"palette:resize(ncolors)","source":"docs","sourceUrl":"https://www.aseprite.org/api/palette#paletteresize","user":"dev"}
{"instruction":"Returns the color in the given entry index (the index goes from 0 to #palette-1).","output":"local color = palette:getColor(index)","source":"docs","sourceUrl":"https://www.aseprite.org/api/palette#palettegetcolor","user":"dev"}
{"instruction":"Changes a palette color in the given entry index (the index goes from 0 to #palette-1). The color can be a Color object or an integer pixel value.","output":"palette:setColor(index, color)","source":"docs","sourceUrl":"https://www.aseprite.org/api/palette#palettesetcolor","user":"dev"}
{"instruction":"At the moment it always return the first frame, but in a near future Aseprite will support palette changes over time (in different frames), so this field should be the frame number where this palette is displayed for first time in the sprite.","output":"Palette.frame","source":"docs","sourceUrl":"https://www.aseprite.org/api/palette#paletteframe","user":"dev"}
{"instruction":"Saves the palette in the given filename.","output":"palette:saveAs(filename)","source":"docs","sourceUrl":"https://www.aseprite.org/api/palette#palettesaveas","user":"dev"}
{"instruction":"Name of the extension.","output":"Plugin.name","source":"docs","sourceUrl":"https://www.aseprite.org/api/plugin#pluginname","user":"dev"}
{"instruction":"Path where the extension is installed.","output":"Plugin.path","source":"docs","sourceUrl":"https://www.aseprite.org/api/plugin#pluginpath","user":"dev"}
{"instruction":"It's a Lua table where you can load/save any kind of Lua value here and they will be saved/restored automatically on each session.","output":"Plugin.preferences","source":"docs","sourceUrl":"https://www.aseprite.org/api/plugin#pluginpreferences","user":"dev"}
{"instruction":"Creates a new command that can be associated to keyboard shortcuts and it's added in the app menu in the specific \"group\". Groups are defined in the gui.xml file inside the \u003cmenus\u003e element.\n\nonclick: Function to be called when the command is executed (clicked or an associated keyboard shortcut pressed).\nonenabled: Optional function to know if the command should be available (enabled or disabled). It should return true if the command can be executed right now. If this function is not specified the command will be always available to be executed by the user.","output":"function init(plugin)\n  plugin:newCommand{\n    id=\"CommandName\",\n    title=\"User Friendly Command Name\",\n    group=string,\n    onclick=function()\n      ...\n    end,\n    onenabled=function()\n      ...\n      return true | false\n    end\n  }\nend","source":"docs","sourceUrl":"https://www.aseprite.org/api/plugin#pluginnewcommand","user":"dev"}
{"instruction":"Creates a new menu item which will contain a submenu grouping several plugin commands.\n\nid: ID to identify this new menu group in Plugin:newCommand{ ..., group=id, ... } calls to add several command/menu items as elements of this group submenu.\ngroup: In which existent group we should add this new menu item. Existent app groups are defined in the gui.xml file inside the \u003cmenus\u003e element.","output":"function init(plugin)\n  plugin:newMenuGroup{\n    id=\"new_group_id\",\n    title=\"Menu Item Label\",\n    group=\"parent_group_id\"\n  }\nend","source":"docs","sourceUrl":"https://www.aseprite.org/api/plugin#pluginnewmenugroup","user":"dev"}
{"instruction":"Creates a menu separator in the given menu group, useful to separate several Plugin:newCommand.","output":"function init(plugin)\n  plugin:newMenuSeparator{\n    group=\"group_id\"\n  }\nend","source":"docs","sourceUrl":"https://www.aseprite.org/api/plugin#pluginnewmenuseparator","user":"dev"}
{"instruction":"If a function receives a point as an argument it could be several things:\n\nYou can specify two parameters x, y directly as arguments of the function. E.g. selection:contains(8, 20)\nYou can specify an object with x and y properties. E.g. selection:contains{ x=8, y=20 }\nYou can specify an array with two elements: E.g. selection:contains{ 8, 20 }\nYou can specify a Point instance: E.g. selection:contains(Point(8, 20))\n\nCreates a new Point instance with the given coordinates (or x=y=0 if they are not specified).","output":"Point()\nPoint(otherPoint)\nPoint(x, y)\nPoint{x=number, y=number}\nPoint{number, number}","source":"docs","sourceUrl":"https://www.aseprite.org/api/point#point","user":"dev"}
{"instruction":"Point.x","output":"local x = point.x\npoint.x = newX","source":"docs","sourceUrl":"https://www.aseprite.org/api/point#pointx","user":"dev"}
{"instruction":"Point.y","output":"local y = point.y\npoint.y = newY","source":"docs","sourceUrl":"https://www.aseprite.org/api/point#pointy","user":"dev"}
{"instruction":"You can set one property at a time, or all properties at the same time. Each time a property is set, it generates undo information.\n\nThe syntax object.properties = { ... } sets the user-defined properties, but doesn't modify the properties related to extensions","output":"object.properties.myInteger = 1\nobject.properties.myNumber = 1.2\nobject.properties.myString = \"value\"\nobject.properties.myVector = { 1, 2, 3, ... }\nobject.properties.myMap = { x=1, y=... }\nobject.properties = { myInteger=1, myNumber=1.2, ... }","source":"docs","sourceUrl":"https://www.aseprite.org/api/properties#user-defined-properties","user":"dev"}
{"instruction":"Extensions can define their own properties if they need them. Each time a property is set, it generates undo information.\n\nSome important points:\n\nThe given pluginKey must be equal to publisher/name, where name is the name of the plugin, and publisher the name/ID of the author of this extension (e.g. GitHub username). These values are specified in the package.json file of the plugin\nThe syntax object.properties(pluginKey, { ... }) is used to set all the properties related to the extension in the given object\nUsing a pluginKey=\"\" is exactly the same as accessing the user-defined properties","output":"local pluginKey = \"publisher/extension-name\"\n\nobject.properties(pluginKey).extInteger = 1\nobject.properties(pluginKey).extString = \"value\"\nobject.properties(pluginKey).extVector = { 1, 2, 3, ... }\nobject.properties(pluginKey).extMap = { x=1, y=... }\nobject.properties(pluginKey, { extInteger=1, extString=1.2, ... })","source":"docs","sourceUrl":"https://www.aseprite.org/api/properties#extension-defined-properties","user":"dev"}
{"instruction":"Returns a RangeType.","output":"local type = app.range.type","source":"docs","sourceUrl":"https://www.aseprite.org/api/range#rangetype","user":"dev"}
{"instruction":"Returns true if the range is empty, i.e. there is no selected range in the timeline (a thick border in the timeline), only the active cel in the sprite editor.\n\nThis is the same as asking for app.range.type == RangeType.EMPTY.\n\nNote that if the range is empty, you can still use Range.layers to get the active layer (the Range.layers property will be an array of one element, just the active layer). The same is true for Range.frame and app.frame, Range.cel and app.cel, etc.","output":"local booleanResult = app.range.isEmpty","source":"docs","sourceUrl":"https://www.aseprite.org/api/range#rangeisempty","user":"dev"}
{"instruction":"Sprite to which this range is pointing to.","output":"Range.sprite","source":"docs","sourceUrl":"https://www.aseprite.org/api/range#rangesprite","user":"dev"}
{"instruction":"Returns or sets the array of selected layers.","output":"local layers = app.range.layers\napp.range.layers = { layer1, layer2, ... }","source":"docs","sourceUrl":"https://www.aseprite.org/api/range#rangelayers","user":"dev"}
{"instruction":"Returns or sets the array of selected frames.","output":"local frames = app.range.frames\napp.range.frames = { 1, 2, ... }","source":"docs","sourceUrl":"https://www.aseprite.org/api/range#rangeframes","user":"dev"}
{"instruction":"Returns an array of selected cels.","output":"Range.cels","source":"docs","sourceUrl":"https://www.aseprite.org/api/range#rangecels","user":"dev"}
{"instruction":"Returns an array of selected images (images from linked cels are counted just one time in this array).","output":"Range.images","source":"docs","sourceUrl":"https://www.aseprite.org/api/range#rangeimages","user":"dev"}
{"instruction":"Returns an array of selected images in the range that are in unlocked layers (editable).","output":"Range.editableImages","source":"docs","sourceUrl":"https://www.aseprite.org/api/range#rangeeditableimages","user":"dev"}
{"instruction":"Gets or sets the array of selected palette entries in the color bar. Each element of the array is an integer (the palette index)","output":"local selectedColors = app.range.colors\napp.range.colors = { ... }","source":"docs","sourceUrl":"https://www.aseprite.org/api/range#rangecolors","user":"dev"}
{"instruction":"select the colors with index 0 and 3 in the color bar","output":"app.range.colors = { 0, 3 }","source":"docs","sourceUrl":"https://www.aseprite.org/api/range#rangecolors","user":"user"}
{"instruction":"Gets or sets the array of selected tile entries in the color bar when we are in a tilemap layer. Each element of the array is an integer (the tile index).","output":"local selectedTiles = app.range.tiles\napp.range.tiles = { ... }","source":"docs","sourceUrl":"https://www.aseprite.org/api/range#rangetiles","user":"dev"}
{"instruction":" select tiles with index 0 and 3 in the color bar","output":"app.range.tiles = { 0, 3 }","source":"docs","sourceUrl":"https://www.aseprite.org/api/range#rangetiles","user":"user"}
{"instruction":"Gets or sets the array of selected slices in the sprite editor. Each element of the array is a slice.","output":"local selectedSlices = app.range.slices\napp.range.slices = { ... }","source":"docs","sourceUrl":"https://www.aseprite.org/api/range#rangeslices","user":"dev"}
{"instruction":"select all slices in the sprite","output":"app.range.slices = app.sprite.slices","source":"docs","sourceUrl":"https://www.aseprite.org/api/range#rangeslices","user":"user"}
{"instruction":"Returns true if the given object (layer/frame/cel/slice) is inside the selected range.","output":"local hasLayer = app.range:contains(layer)\nlocal hasFrame = app.range:contains(frame)\nlocal hasCel = app.range:contains(cel)\nlocal hasSlice = app.range:contains(slice)","source":"docs","sourceUrl":"https://www.aseprite.org/api/range#rangecontains","user":"dev"}
{"instruction":"Returns true if the given color index is selected in the color bar.","output":"local hasColor = app.range:containsColor(colorIndex)","source":"docs","sourceUrl":"https://www.aseprite.org/api/range#rangecontainscolor","user":"dev"}
{"instruction":"Clears the current selected range of frames/layers/cels/colors.","output":"app.range:clear()","source":"docs","sourceUrl":"https://www.aseprite.org/api/range#rangeclear","user":"dev"}
{"instruction":"If a function receives a rectangle as an argument it could be several things:\n\nYou can specify the parameters x, y, width, height directly as arguments of the function. E.g. sprite:crop(0, 16, 64, 32)\nYou can specify an object with x, y, width, and height properties. E.g. sprite:crop{ x=0, y=16, width=64, height=32 }\nYou can specify an array with 4 elements: E.g. sprite:crop{ 0, 16, 64, 32 }\nYou can specify a Rectangle instance: E.g. sprite:crop(Rectangle(0, 16, 64, 32))","output":"Rectangle()\nRectangle(otherRectangle)\nRectangle(x, y, width, height)\nRectangle{x=number, y=number, width=number, height=number}\nRectangle{x=number, y=number, w=number, h=number}\nRectangle{number, number, number, number}","source":"docs","sourceUrl":"https://www.aseprite.org/api/rectangle#rectangle","user":"dev"}
{"instruction":"Gets or sets the x-coordinate of the rectangle. 0 means at the left side of the screen/sprite.","output":"local x = rectangle.x\nrectangle.x = newX","source":"docs","sourceUrl":"https://www.aseprite.org/api/rectangle#rectanglex","user":"dev"}
{"instruction":"Gets or sets the y-coordinate of the rectangle. 0 means at the top side of the screen/sprite.","output":"local y = rectangle.y\nrectangle.y = newY","source":"docs","sourceUrl":"https://www.aseprite.org/api/rectangle#rectangley","user":"dev"}
{"instruction":"Gets or sets the width of the rectangle. If it's 0, the rectangle is empty (so the coordinate doesn't matter).","output":"local width = rectangle.width\nrectangle.width = newWidth","source":"docs","sourceUrl":"https://www.aseprite.org/api/rectangle#rectanglewidth","user":"dev"}
{"instruction":"Gets or sets the height of the rectangle. If it's 0, the rectangle is empty (so the coordinate doesn't matter).","output":"local height = rectangle.height\nrectangle.height = newHeight","source":"docs","sourceUrl":"https://www.aseprite.org/api/rectangle#rectangleheight","user":"dev"}
{"instruction":"Same as Rectangle.width.","output":"Rectangle.w","source":"docs","sourceUrl":"https://www.aseprite.org/api/rectangle#rectanglew","user":"dev"}
{"instruction":"Same as Rectangle.height.","output":"Rectangle.h","source":"docs","sourceUrl":"https://www.aseprite.org/api/rectangle#rectangleh","user":"dev"}
{"instruction":"Gets or sets the origin of the rectangle with a Point object, just like changing Rectangle.x and Rectangle.y at the same time.","output":"local point = rectangle.origin\nrectangle.origin = newPoint","source":"docs","sourceUrl":"https://www.aseprite.org/api/rectangle#rectangleorigin","user":"dev"}
{"instruction":"Gets or sets the size of the rectangle with a Size object, just like changing Rectangle.width and Rectangle.height at the same time.","output":"local size = rectangle.size\nrectangle.size = newSize","source":"docs","sourceUrl":"https://www.aseprite.org/api/rectangle#rectanglesize","user":"dev"}
{"instruction":"Returns true if the rectangle is empty i.e. width and/or height are 0.","output":"local booleanResult = rectangle.isEmpty","source":"docs","sourceUrl":"https://www.aseprite.org/api/rectangle#rectangleisempty","user":"dev"}
{"instruction":"Returns true if otherRectangle is inside rectangle.","output":"local booleanResult = rectangle:contains(otherRectangle)","source":"docs","sourceUrl":"https://www.aseprite.org/api/rectangle#rectanglecontains","user":"dev"}
{"instruction":"Returns true if otherRectangle is inside rectangle.","output":"local bounds = Rectangle{ x=0, y=0, width=32, height=32 }\nlocal rectInside = Rectangle{ x=4, y=4, width=8, height=8 }\nif bounds:contains(rectInside) then ... end","source":"docs","sourceUrl":"https://www.aseprite.org/api/rectangle#rectanglecontains","user":"user"}
{"instruction":"Returns true if rectangle intersects in some way otherRectangle.","output":"local booleanResult = rectangle:intersects(otherRectangle)","source":"docs","sourceUrl":"https://www.aseprite.org/api/rectangle#rectangleintersects","user":"dev"}
{"instruction":"Returns the new rectangle newRectangle which is the intersection of rectangle and otherRectangle. If both rectangles don't intersect each other, the result will be an empty rectangle","output":"local newRectangle = rectangle:intersect(otherRectangle)","source":"docs","sourceUrl":"https://www.aseprite.org/api/rectangle#rectangleintersect","user":"dev"}
{"instruction":"Returns the new rectangle newRectangle which will be a rectangle big enough to contains both given rectangles rectangle and otherRectangle.","output":"local newRectangle = rectangle:union(otherRectangle)","source":"docs","sourceUrl":"https://www.aseprite.org/api/rectangle#rectangleunion","user":"dev"}
{"instruction":"Creates a new empty selection, or with the given rectangle.","output":"Selection()\nSelection(rectangle)","source":"docs","sourceUrl":"https://www.aseprite.org/api/selection#selection","user":"dev"}
{"instruction":"Returns a rectangle with the bounds of the selection (if the rectangle is empty, is because there is no selection).","output":"local rectangle = selection.bounds","source":"docs","sourceUrl":"https://www.aseprite.org/api/selection#selectionbounds","user":"dev"}
{"instruction":"Gets or sets the selection origin/position (a point). This can be used to move the selection edges (not the content).","output":"local point = selection.origin\nselection.origin = newPoint","source":"docs","sourceUrl":"https://www.aseprite.org/api/selection#selectionorigin","user":"dev"}
{"instruction":"Returns true if the selection is empty i.e. there are no pixels selected.","output":"local status = selection.isEmpty","source":"docs","sourceUrl":"https://www.aseprite.org/api/selection#selectionisempty","user":"dev"}
{"instruction":"deselect selection","output":"selection:deselect()","source":"docs","sourceUrl":"https://www.aseprite.org/api/selection#selectiondeselect","user":"dev"}
{"instruction":"Replaces the selection with the given rectangle. If you want to add a rectangle to the selection, you can use Selection:add().","output":"selection:select(rectangle)","source":"docs","sourceUrl":"https://www.aseprite.org/api/selection#selectionselect","user":"dev"}
{"instruction":"Selected the whole sprite canvas. Only valid for a sprite.selection.","output":"selection:selectAll()","source":"docs","sourceUrl":"https://www.aseprite.org/api/selection#selectionselectall","user":"dev"}
{"instruction":"Adds a new rectangle (or otherSelection) to the selection. Creating an union between the existent selected area and the given rectangle/otherSelection.","output":"selection:add(rectangle)\nselection:add(otherSelection)","source":"docs","sourceUrl":"https://www.aseprite.org/api/selection#selectionadd","user":"dev"}
{"instruction":"Subtracts the given rectangle (or otherSelection) from selection.","output":"selection:subtract(rectangle)\nselection:subtract(otherSelection)","source":"docs","sourceUrl":"https://www.aseprite.org/api/selection#selectionsubtract","user":"dev"}
{"instruction":"Creates an intersection in selection between the given rectangle (or otherSelection) and the already selected area in selection.","output":"selection:intersect(rectangle)\nselection:intersect(otherSelection)","source":"docs","sourceUrl":"https://www.aseprite.org/api/selection#selectionintersect","user":"dev"}
{"instruction":"Returns true or false if the given point is inside the selection.","output":"local status = selection:contains(point)\nlocal status = selection:contains(x, y)","source":"docs","sourceUrl":"https://www.aseprite.org/api/selection#selectioncontains","user":"dev"}
{"instruction":"This is an object that saves the active state of the editor in a specific moment. Which active sprite, layer, frame, cel, image, etc. where in a specific moment.\n\nThe site object will not be updated if the active sprite is modified.","output":"local site = app.site","source":"docs","sourceUrl":"https://www.aseprite.org/api/site#site","user":"dev"}
{"instruction":"Gets the active sprite at the time the site object was created.","output":"Site.sprite","source":"docs","sourceUrl":"https://www.aseprite.org/api/site#sitesprite","user":"dev"}
{"instruction":"Gets the active layer at the time the site object was created.","output":"Site.layer","source":"docs","sourceUrl":"https://www.aseprite.org/api/site#sitelayer","user":"dev"}
{"instruction":"Gets the active cel at the time the site object was created.","output":"Site.cel","source":"docs","sourceUrl":"https://www.aseprite.org/api/site#sitecel","user":"dev"}
{"instruction":"Gets the active frame at the time the site object was created.","output":"Site.frame","source":"docs","sourceUrl":"https://www.aseprite.org/api/site#siteframe","user":"dev"}
{"instruction":"Gets the active frame number (an integer value, 1 is the first frame). Same as app.site.frame.frameNumber.","output":"Site.frameNumber","source":"docs","sourceUrl":"https://www.aseprite.org/api/site#siteframenumber","user":"dev"}
{"instruction":"Gets the active image at the time the site object was created.","output":"Site.image","source":"docs","sourceUrl":"https://www.aseprite.org/api/site#siteimage","user":"dev"}
{"instruction":"If a function receives a size as an argument it could be several things:\n\nYou can specify two parameters width, height directly as arguments of the function. E.g. sprite:resize(64, 32)\nYou can specify an object with width and height properties. E.g. sprite:resize{ width=64, height=32 }\nYou can specify an array two elements: E.g. sprite:resize{ 64, 32 }\nYou can specify a Size instance: E.g. sprite:resize(Size(64, 32))\n\nCreates a new Size instance with the given dimensions (or width=height=0 if they are not specified).","output":"Size()\nSize(otherSize)\nSize(width, height)\nSize{width=number, height=number}\nSize{w=number, h=number}\nSize{number, number}","source":"docs","sourceUrl":"https://www.aseprite.org/api/size#size","user":"dev"}
{"instruction":"Size.width","output":"local width = size.width\nsize.width = newWidth","source":"docs","sourceUrl":"https://www.aseprite.org/api/size#sizewidth","user":"dev"}
{"instruction":"Size.height","output":"local height = size.height\nsize.height = newHeight","source":"docs","sourceUrl":"https://www.aseprite.org/api/size#sizeheight","user":"dev"}
{"instruction":"Same as Size.width.","output":"Size.w","source":"docs","sourceUrl":"https://www.aseprite.org/api/size#sizew","user":"dev"}
{"instruction":"Same as Size.height.","output":"Size.h","source":"docs","sourceUrl":"https://www.aseprite.org/api/size#sizeh","user":"dev"}
{"instruction":"Returns the new size newSize which will be big enough to contains both given dimensions (size and otherSize).","output":"local newSize = size:union(otherSize)","source":"docs","sourceUrl":"https://www.aseprite.org/api/size#sizeunion","user":"dev"}
{"instruction":"Gets or sets a slice's bounding rectangle.","output":"Slice.bounds","source":"docs","sourceUrl":"https://www.aseprite.org/api/slice#slicebounds","user":"dev"}
{"instruction":"Gets or sets the central rectangle of a slice's nine-slice. The getter returns nil when nine-slicing is inactive in Aseprite's user interface. The rectangle's top-left corner is defined in local coordinates.","output":"local sliceBounds = slice.bounds\nlocal inset = 3\nslice.center = Rectangle(\n    inset, inset,\n    sliceBounds.width - inset * 2,\n    sliceBounds.height - inset * 2)","source":"docs","sourceUrl":"https://www.aseprite.org/api/slice#slicecenter","user":"dev"}
{"instruction":"Gets or sets the user-defined color of this slice in the timeline.","output":"local color = slice.color\nslice.color = color","source":"docs","sourceUrl":"https://www.aseprite.org/api/slice#slicecolor","user":"dev"}
{"instruction":"Gets or sets the user-defined data related to this slice, a string.","output":"local data = slice.data\nslice.data = data","source":"docs","sourceUrl":"https://www.aseprite.org/api/slice#slicedata","user":"dev"}
{"instruction":"Access user-defined and extension-defined properties of this slice.","output":"Slice.properties","source":"docs","sourceUrl":"https://www.aseprite.org/api/slice#sliceproperties","user":"dev"}
{"instruction":"Gets or sets the a slice's name, a string.","output":"Slice.name","source":"docs","sourceUrl":"https://www.aseprite.org/api/slice#slicename","user":"dev"}
{"instruction":"Gets or sets the slice's pivot, a point. The getter returns nil when the pivot is inactive in Aseprite's user interface. The pivot is defined in local coordinates relative to the slice's top-left corner.","output":"local sliceBounds = slice.bounds\nslice.pivot = Point(\n    sliceBounds.width // 2,\n    sliceBounds.height // 2)","source":"docs","sourceUrl":"https://www.aseprite.org/api/slice#slicepivot","user":"dev"}
{"instruction":"set the pivot to the slice's approximate center.","output":"local sliceBounds = slice.bounds\nslice.pivot = Point(\n    sliceBounds.width // 2,\n    sliceBounds.height // 2)","source":"docs","sourceUrl":"https://www.aseprite.org/api/slice#slicepivot","user":"user"}
{"instruction":"Gets the sprite to which a slice belongs.","output":"Slice.sprite","source":"docs","sourceUrl":"https://www.aseprite.org/api/slice#slicesprite","user":"dev"}
{"instruction":"inset the central rectangle by three pixels","output":"local sliceBounds = slice.bounds\nlocal inset = 3\nslice.center = Rectangle(\n    inset, inset,\n    sliceBounds.width - inset * 2,\n    sliceBounds.height - inset * 2)","source":"docs","sourceUrl":"https://www.aseprite.org/api/slice#slicecenter","user":"user"}
{"instruction":"Creates a new sprite with the given width and height. The color mode is optional, RGB by default.\n\nThe spec parameter is an image specification object.\n\nIf otherSprite is given (other Sprite object), the sprite is duplicated.\n\nIf fromFile is given, it indicates a file name (a string) and it's like opening a new document with app.open().\n\nWhen loading from a file, setting oneFrame to true will load with only the first animation frame.","output":"local sprite = Sprite(width, height)\nlocal sprite = Sprite(width, height, colorMode)\nlocal sprite = Sprite(spec)\nlocal sprite = Sprite(otherSprite)\nlocal sprite = Sprite{ fromFile=string }\nlocal sprite = Sprite{ fromFile=string, oneFrame=true }","source":"docs","sourceUrl":"https://www.aseprite.org/api/sprite#sprite","user":"dev"}
{"instruction":"Returns or changes the sprite width. Use Sprite:resize if you want to change the sprite size resizing layers, images, etc.","output":"local w = sprite.width\nsprite.width = w","source":"docs","sourceUrl":"https://www.aseprite.org/api/sprite#spritewidth","user":"dev"}
{"instruction":"Returns or changes the sprite height. Use Sprite:resize if you want to change the sprite size resizing layers, images, etc.","output":"local h = sprite.height\nsprite.height = h","source":"docs","sourceUrl":"https://www.aseprite.org/api/sprite#spriteheight","user":"dev"}
{"instruction":"Returns the bounds of the sprite as a rectangle in the position 0,0. This is like calling Rectangle{ x=0, y=0, width=sprite.width, height=sprite.height }.","output":"local rectangle = sprite.bounds","source":"docs","sourceUrl":"https://www.aseprite.org/api/sprite#spritebounds","user":"dev"}
{"instruction":"Gets or sets the bounds of the sprite grid as a rectangle. By default this is 16x16 (with origin in 0,0) but the default value can be changed from Edit \u003e Preferences \u003e Grid.","output":"local rectangle = sprite.gridBounds\nsprite.gridBounds = rectangle","source":"docs","sourceUrl":"https://www.aseprite.org/api/sprite#spritegridbounds","user":"dev"}
{"instruction":"Gets or sets the pixel ratio of the sprite as a size.","output":"local size = sprite.pixelRatio\nsprite.pixelRatio = size","source":"docs","sourceUrl":"https://www.aseprite.org/api/sprite#spritepixelratio","user":"dev"}
{"instruction":"Gets or sets the active sprite selection. This property is an instance of the Selection class to manipulate the set of selected pixels in the canvas.","output":"local selection = sprite.selection\nsprite.selection = newSelection","source":"docs","sourceUrl":"https://www.aseprite.org/api/sprite#spriteselection","user":"dev"}
{"instruction":"Gets or sets the name of the file from where this sprite was loaded or saved. Or an empty string if this is a new sprite without an associated file.","output":"local name = sprite.filename\nsprite.filename = newName","source":"docs","sourceUrl":"https://www.aseprite.org/api/sprite#spritefilename","user":"dev"}
{"instruction":"Returns true if the sprite is modified compared to the latest saved state on disk.","output":"local modified = sprite.isModified","source":"docs","sourceUrl":"https://www.aseprite.org/api/sprite#spriteismodified","user":"dev"}
{"instruction":"Returns the color mode of this sprite.","output":"Sprite.colorMode","source":"docs","sourceUrl":"https://www.aseprite.org/api/sprite#spritecolormode","user":"dev"}
{"instruction":"The specification for image in this sprite.","output":"local spec = sprite.spec","source":"docs","sourceUrl":"https://www.aseprite.org/api/sprite#spritespec","user":"dev"}
{"instruction":"An array of frames.","output":"for i,frame in ipairs(s.frames) do\n  -- ...\nend\nfor i = 1,#s.frames do\n  -- s.frames[i]\nend","source":"docs","sourceUrl":"https://www.aseprite.org/api/sprite#spriteframes","user":"dev"}
{"instruction":"An array of palettes. Generally it contains only one palette (sprite.palettes[1]).\n\nIn the future we'll support multiple palettes to create color cycling animations.","output":"Sprite.palettes","source":"docs","sourceUrl":"https://www.aseprite.org/api/sprite#spritepalettes","user":"dev"}
{"instruction":"An array of layers.","output":"for i,layer in ipairs(s.layers) do\n  -- ...\nend\nfor i = 1,#s.layers do\n  -- s.layers[i]\nend","source":"docs","sourceUrl":"https://www.aseprite.org/api/sprite#spritelayers","user":"dev"}
{"instruction":"An array of cels.","output":"for i,cel in ipairs(s.cels) do\n  -- ...\nend\nfor i = 1,#s.cels do\n  -- s.cels[i]\nend","source":"docs","sourceUrl":"https://www.aseprite.org/api/sprite#spritecels","user":"dev"}
{"instruction":"An array of tags.","output":"for i,tag in ipairs(s.tags) do\n  -- ...\nend\nfor i = 1,#s.tags do\n  -- s.tags[i]\nend","source":"docs","sourceUrl":"https://www.aseprite.org/api/sprite#spritetags","user":"dev"}
{"instruction":"An array of slices.","output":"for i,slice in ipairs(s.slices) do\n  -- ...\nend\nfor i = 1,#s.slices do\n  -- s.slices[i]\nend","source":"docs","sourceUrl":"https://www.aseprite.org/api/sprite#spriteslices","user":"dev"}
{"instruction":"Returns the background layer a layer object or nil if the sprite doesn't contain a background layer.","output":"Sprite.backgroundLayer","source":"docs","sourceUrl":"https://www.aseprite.org/api/sprite#spritebackgroundlayer","user":"dev"}
{"instruction":"The transparent color is an intenger that specifies what index (0 by default) is the transparent color in transparent layers on indexed sprites.","output":"local number = sprite.transparentColor\nsprite.transparentColor = number","source":"docs","sourceUrl":"https://www.aseprite.org/api/sprite#spritetransparentcolor","user":"dev"}
{"instruction":"Gets or sets the user-defined color of this sprite. This color is used to display the tab in the main window of this sprite.","output":"local color = sprite.color\nsprite.color = color","source":"docs","sourceUrl":"https://www.aseprite.org/api/sprite#spritecolor","user":"dev"}
{"instruction":"Gets or sets the user-defined data related to this sprite (a text string).","output":"local data = sprite.data\nsprite.data = data","source":"docs","sourceUrl":"https://www.aseprite.org/api/sprite#spritedata","user":"dev"}
{"instruction":"Access user-defined and extension-defined properties of this sprite.","output":"Sprite.properties","source":"docs","sourceUrl":"https://www.aseprite.org/api/sprite#spriteproperties","user":"dev"}
{"instruction":"Resize the sprite (and all frames/cels) to the given dimensions. See Size class.","output":"sprite:resize(width, height)\nsprite:resize(size)","source":"docs","sourceUrl":"https://www.aseprite.org/api/sprite#spriteresize","user":"dev"}
{"instruction":"Crops the sprite to the given dimensions. See the Rectangle class.","output":"sprite:crop(x, y, width, height)\nsprite:crop(rectangle)","source":"docs","sourceUrl":"https://www.aseprite.org/api/sprite#spritecrop","user":"dev"}
{"instruction":"Saves the sprite to the given file and marks the sprite as saved so closing it won't ask to save changes.","output":"sprite:saveAs(filename)","source":"docs","sourceUrl":"https://www.aseprite.org/api/sprite#spritesaveas","user":"dev"}
{"instruction":"Saves a copy of the sprite in the given file but doesn't change the saved state of the sprite, if the sprite is modified and then try to close it, the user will be asked to save changes.","output":"sprite:saveCopyAs(filename)","source":"docs","sourceUrl":"https://www.aseprite.org/api/sprite#spritesavecopyas","user":"dev"}
{"instruction":"Closes the sprite. This doesn't ask the user to save changes. If you want to do the classic File \u003e Close where the user is asking to save changes, you can use app.command.CloseFile().","output":"sprite:close()","source":"docs","sourceUrl":"https://www.aseprite.org/api/sprite#spriteclose","user":"dev"}
{"instruction":"Sets the sprite palette loading it from the given file.\n\nThe same can be achieved using Palette{ fromFile }:\n\nsprite:setPalette(Palette{ fromFile=filename })","output":"sprite:loadPalette(filename)","source":"docs","sourceUrl":"https://www.aseprite.org/api/sprite#spriteloadpalette","user":"dev"}
{"instruction":"Changes the sprite palette.","output":"sprite:setPalette(palette)","source":"docs","sourceUrl":"https://www.aseprite.org/api/sprite#spritesetpalette","user":"dev"}
{"instruction":"Assign a new color space to the sprite without modifying the sprite pixels.","output":"local colorSpace = ColorSpace{ sRGB=true }\nsprite:assignColorSpace(colorSpace)","source":"docs","sourceUrl":"https://www.aseprite.org/api/sprite#spriteassigncolorspace","user":"dev"}
{"instruction":"Converts all the sprite pixels to a new color space so the image looks the same as in the previous color space (all pixels will be adjusted to the new color space).","output":"local colorSpace = ColorSpace{ sRGB=true }\nsprite:convertColorSpace(colorSpace)","source":"docs","sourceUrl":"https://www.aseprite.org/api/sprite#spriteconvertcolorspace","user":"dev"}
{"instruction":"Creates a new layer at the top of the layers stack.","output":"local layer = sprite:newLayer()","source":"docs","sourceUrl":"https://www.aseprite.org/api/sprite#spritenewlayer","user":"dev"}
{"instruction":"Creates a new empty layer group at the top of the layers stack.","output":"local layerGroup = sprite:newGroup()","source":"docs","sourceUrl":"https://www.aseprite.org/api/sprite#spritenewgroup","user":"dev"}
{"instruction":"Deletes the given layer or the layer with the given layerName (a string).","output":"sprite:deleteLayer(layer)\nsprite:deleteLayer(layerName)","source":"docs","sourceUrl":"https://www.aseprite.org/api/sprite#spritedeletelayer","user":"dev"}
{"instruction":"Creates a copy of the given frame object or frame number and returns a Frame that points to the newly created frame in frameNumber position.","output":"local frame = sprite:newFrame(frame)\nlocal frame = sprite:newFrame(frameNumber)","source":"docs","sourceUrl":"https://www.aseprite.org/api/sprite#spritenewframe","user":"dev"}
{"instruction":"Creates a new empty frame in the given frameNumber (an integer) and returns the new frame.","output":"Sprite:newEmptyFrame()","source":"docs","sourceUrl":"https://www.aseprite.org/api/sprite#spritenewemptyframe","user":"dev"}
{"instruction":"delete frame","output":"sprite:deleteFrame(frame)","source":"docs","sourceUrl":"https://www.aseprite.org/api/sprite#spritedeleteframe","user":"dev"}
{"instruction":"Creates a new cel in the given layer and frame number. If the image is not specified, a new image will be created with the size of the sprite canvas. The position is a point to locate the image.","output":"cel = sprite:newCel(layer, frame)\ncel = sprite:newCel(layer, frame, image, position)","source":"docs","sourceUrl":"https://www.aseprite.org/api/sprite#spritenewcel","user":"dev"}
{"instruction":"Deletes the given cel. If the cel is from a transparent layer, the cel is completely deleted, but if the cel is from a background layer, the cel will be delete with the background color.","output":"sprite:deleteCel(cel)\nsprite:deleteCel(layer, frame)","source":"docs","sourceUrl":"https://www.aseprite.org/api/sprite#spritedeletecel","user":"dev"}
{"instruction":"Creates a new tag in the given frame range and with the given name.","output":"local tag = sprite:newTag(fromFrameNumber, toFrameNumber)","source":"docs","sourceUrl":"https://www.aseprite.org/api/sprite#spritenewtag","user":"dev"}
{"instruction":"Deletes the given tag.","output":"sprite:deleteTag(tag)\nsprite:deleteTag(tagName)","source":"docs","sourceUrl":"https://www.aseprite.org/api/sprite#spritedeletetag","user":"dev"}
{"instruction":"Returns a new slice.","output":"local slice = sprite:newSlice()\nlocal slice = sprite:newSlice(Rectangle)","source":"docs","sourceUrl":"https://www.aseprite.org/api/sprite#spritenewslice","user":"dev"}
{"instruction":"Deletes the given slice.","output":"sprite:deleteSlice(slice)\nsprite:deleteSlice(sliceName)","source":"docs","sourceUrl":"https://www.aseprite.org/api/sprite#spritedeleteslice","user":"dev"}
{"instruction":"Returns a new tileset and adds it to the sprite's tilesets.\n\nIf no parameters are given, the resulting tileset will have just one empty tile and a tile size equal to the active sprite grid size.\n\nIf Grid or Rectangle is specified it is used to set the resulting tileset's origin and tile size.\n\nnumTiles specifies the number of tiles we want the tileset to contain initially.\n\nIf another tileset is passed as the only parameter, the result is a duplicate of it. Take into consideration that the passed tileset cannot belong to another sprite.","output":"local tileset = sprite:newTileset()\nlocal tileset = sprite:newTileset(Grid)\nlocal tileset = sprite:newTileset(Rectangle)\nlocal tileset = sprite:newTileset(Grid, numTiles)\nlocal tileset = sprite:newTileset(Rectangle, numTiles)\nlocal tileset = sprite:newTileset(anotherTileset)","source":"docs","sourceUrl":"https://www.aseprite.org/api/sprite#spritenewtileset","user":"dev"}
{"instruction":"Deletes the given tileset from the sprite's tilesets.","output":"sprite:deleteTileset(tileset)\nsprite:deleteTileset(tilesetIndex)","source":"docs","sourceUrl":"https://www.aseprite.org/api/sprite#spritedeletetileset","user":"dev"}
{"instruction":"Inserts an empty tile into the given tileset at a given tileIndex. If tileIndex is not provided, the new tile is added to the end of the tileset. This method generates undo information, so you could use it as an individual operation or in a transaction.","output":"local tile = sprite:newTile(tileset [, tileIndex])","source":"docs","sourceUrl":"https://www.aseprite.org/api/sprite#spritenewtile","user":"dev"}
{"instruction":"Removes a tile from a tileset. This method generates undo information, so you could use it as an individual operation or in a transaction.","output":"local tile = tileset:tile(tileIndex)\nSprite:deleteTile(tile)\nSprite:deleteTile(tileset, tileIndex)","source":"docs","sourceUrl":"https://www.aseprite.org/api/sprite#spritedeletetile","user":"dev"}
{"instruction":"Flatten all layers of the sprite into one layer. It's like calling app.commands.FlattenLayers().","output":"sprite:flatten()","source":"docs","sourceUrl":"https://www.aseprite.org/api/sprite#spriteflatten","user":"dev"}
{"instruction":"Returns the Events object to associate functions that can act like listeners of specific Sprite events.\n\nA special ev argument can be sent to the listener. Which generally is a table, but it can be nil for older version of Aseprite or events that don't support it.\n\nAvailable events for a Sprite:\n\n'change': When sprite content changed because we perform some action on it (also called when we undo/redo those actions). Since Aseprite v1.2.41, you can access ev.fromUndo property which is true if the change came from a undo/redo/undo history event (and not from a direct user change in the sprite).\n'filenamechange': When the filename associated to a sprite changes.","output":"sprite.events:on('change',\n  function(ev)\n    print('The sprite has changed')\n  end)","source":"docs","sourceUrl":"https://www.aseprite.org/api/sprite#spriteevents","user":"dev"}
{"instruction":"Special property to disable Aseprite tile management UI and use an external plugin to handle tilesets and tilemaps in this sprite.\n\nThis property is used by the Attachment-System plugin, but any extension can create a totally customized way to handle tiles (and disable the standard UI to avoid conflicts).\n\nWarning: If a sprite has this property set, another plugin shouldn't change it, because it might break the tilesets/tilemaps structure.","output":"local id = sprite.tileManagementPlugin\nsprite.tileManagementPlugin = newId","source":"docs","sourceUrl":"https://www.aseprite.org/api/sprite#spritetilemanagementplugin","user":"dev"}
{"instruction":"Returns the sprite to which this tag belongs.","output":"Tag.sprite","source":"docs","sourceUrl":"https://www.aseprite.org/api/tag#tagsprite","user":"dev"}
{"instruction":"Returns the first Frame object where this tag starts.\n\nNote: Old versions (Aseprite v1.2.10-beta2) returned a frame number instead of a Frame object.","output":"Tag.fromFrame","source":"docs","sourceUrl":"https://www.aseprite.org/api/tag#tagfromframe","user":"dev"}
{"instruction":"Returns the last Frame object where this tag ends.\n\nNote: Old versions (Aseprite v1.2.10-beta2) returned a frame number instead of a Frame object.","output":"Tag.toFrame","source":"docs","sourceUrl":"https://www.aseprite.org/api/tag#tagtoframe","user":"dev"}
{"instruction":"Returns the number of frames that this tag contain. ","output":"local frames = tag.toFrame.frameNumber - tag.fromFrame.frameNumber + 1","source":"docs","sourceUrl":"https://www.aseprite.org/api/tag#tagframes","user":"dev"}
{"instruction":"Gets or sets the name of the tag (a string).","output":"local name = tag.name\ntag.name = name","source":"docs","sourceUrl":"https://www.aseprite.org/api/tag#tagname","user":"dev"}
{"instruction":"Gets or sets the Animation Direction property of the tag.","output":"local aniDir = tag.aniDir\ntag.aniDir = AniDir.FORWARD\ntag.aniDir = AniDir.REVERSE\ntag.aniDir = AniDir.PING_PONG\ntag.aniDir = AniDir.PING_PONG_REVERSE","source":"docs","sourceUrl":"https://www.aseprite.org/api/tag#taganidir","user":"dev"}
{"instruction":"Gets or sets the user-defined color of this tag in the timeline.","output":"local color = tag.color\ntag.color = color","source":"docs","sourceUrl":"https://www.aseprite.org/api/tag#tagcolor","user":"dev"}
{"instruction":"Gets or sets the number of times the tag is repeated/looped.\n\n0 = Doesn't specify, plays infinite in UI, once on export, for ping-pong it plays once in each direction\n1 = Plays once, for ping-pong it plays just in one direction\n2 = Plays twice, for ping-pong it plays once in each direction, and once in reverse\nn = Plays N times","output":"local n = tag.repeats\ntag.repeats = n","source":"docs","sourceUrl":"https://www.aseprite.org/api/tag#tagrepeats","user":"dev"}
{"instruction":"Gets or sets the user-defined data related to this tag, a string.","output":"local data = tag.data\ntag.data = data","source":"docs","sourceUrl":"https://www.aseprite.org/api/tag#tagdata","user":"dev"}
{"instruction":"Access user-defined and extension-defined properties of this tag.","output":"Tag.properties","source":"docs","sourceUrl":"https://www.aseprite.org/api/tag#tagproperties","user":"dev"}
{"instruction":"The index of the tile (position in its tileset).","output":"Tile.index","source":"docs","sourceUrl":"https://www.aseprite.org/api/tile#tileindex","user":"dev"}
{"instruction":"Gets or sets the image of this tile.","output":"local image = tile.image\ntile.image = newImage","source":"docs","sourceUrl":"https://www.aseprite.org/api/tile#tileimage","user":"dev"}
{"instruction":"Gets or sets the user-defined color of this tile.","output":"local color = tile.color\ntile.color = newColor","source":"docs","sourceUrl":"https://www.aseprite.org/api/tile#tilecolor","user":"dev"}
{"instruction":"Gets or sets the user-defined data related to this tile (a text string).","output":"local data = tile.data\ntile.data = newData","source":"docs","sourceUrl":"https://www.aseprite.org/api/tile#tiledata","user":"dev"}
{"instruction":"Access user-defined and extension-defined properties of this tile.","output":"Tile.properties","source":"docs","sourceUrl":"https://www.aseprite.org/api/tile#tileproperties","user":"dev"}
{"instruction":"Access user-defined and extension-defined properties of this tileset.","output":"Tileset.properties","source":"docs","sourceUrl":"https://www.aseprite.org/api/tileset#tilesetproperties","user":"dev"}
{"instruction":"Returns the tile in the given index (0 is the empty tile, so 1 is the first user-defined tile).","output":"local tile = ts:tile(index)","source":"docs","sourceUrl":"https://www.aseprite.org/api/tileset#tilesettile","user":"dev"}
{"instruction":"Returns the image of tile in the given index (0 is the empty tile, so 1 is the first user-defined tile).\n\nNote: This method was superseded with Tileset:tile(),","output":"local tileImage = ts:getTile(index)","source":"docs","sourceUrl":"https://www.aseprite.org/api/tileset#tilesetgettile","user":"dev"}
{"instruction":"get tile from tilemap","output":"local tileImage = ts:tile(index).image","source":"docs","sourceUrl":"https://www.aseprite.org/api/tileset#tilesetgettile","user":"user"}
{"instruction":"Run something every 5 seconds","output":"local timer = Timer{\n  interval=5.0,\n  ontick=function()\n    print('Each 5 seconds')\n  end }\ntimer:start()","source":"docs","sourceUrl":"https://www.aseprite.org/api/timer#timer","user":"user"}
{"instruction":"run something every 1 second","output":"local timer\ntimer = Timer{\n  interval=1.0,\n  ontick=function()\n    print('Called')\n    timer:stop()\n  end }\ntimer:start()","source":"docs","sourceUrl":"https://www.aseprite.org/api/timer#timer","user":"user"}
{"instruction":"Creates a new timer.\n\ninterval: Number of seconds to wait for the first/next call. You can specify decimal numbers, e.g. interval=1.0 / 60.0 to call the function 60 times per second, etc.\nontick: Function that is called each time the specified number of seconds ellapses.","output":"local timer = Timer{ interval=number,\n                     ontick=function }","source":"docs","sourceUrl":"https://www.aseprite.org/api/timer#timer","user":"dev"}
{"instruction":"Starts the timer.","output":"Timer:start()","source":"docs","sourceUrl":"https://www.aseprite.org/api/timer#timerstart","user":"dev"}
{"instruction":"Stops the timer.","output":"Timer:stop()","source":"docs","sourceUrl":"https://www.aseprite.org/api/timer#timerstop","user":"dev"}
{"instruction":"Returns the interval of this specific timer (in seconds).","output":"Timer.interval","source":"docs","sourceUrl":"https://www.aseprite.org/api/timer#timerinterval","user":"dev"}
{"instruction":"Returns true if the timer is running.","output":"Timer.isRunning","source":"docs","sourceUrl":"https://www.aseprite.org/api/timer#timerisrunning","user":"dev"}
{"instruction":"References a drawing tool. At the moment this class is used only to get and set the active tool (app.tool), or to paint on the canvas (tool parameter in app.useTool()).\n\nIf a function receives a tool, it can receive a tool ID too.\n\nReturns the identifier (a string) of the specified in the gui.xml file (example).","output":"local id = app.tool.id","source":"docs","sourceUrl":"https://www.aseprite.org/api/tool#tool","user":"dev"}
{"instruction":"The (x,y) position of the touch when the event happens, in client coordinates, where (0,0) is the top-left corner of the canvas widget.","output":"  ontouch=function(ev)\n    print('touch event pressed in', ev.x, ev.y)\n  end","source":"docs","sourceUrl":"https://www.aseprite.org/api/touchevent#toucheventx","user":"dev"}
{"instruction":"See TouchEvent.x","output":"TouchEvent.y","source":"docs","sourceUrl":"https://www.aseprite.org/api/touchevent#toucheventy","user":"dev"}
{"instruction":"Magnification factor to apply.","output":"TouchEvent.magnification","source":"docs","sourceUrl":"https://www.aseprite.org/api/touchevent#toucheventmagnification","user":"dev"}
{"instruction":"Represents a version number and provides an easy way to compare if the app.version is greater or equal than a specific expected version.","output":"if app.version \u003e= Version(\"1.2.10-beta4\") then\n  ...\nend","source":"docs","sourceUrl":"https://www.aseprite.org/api/version#version","user":"dev"}
{"instruction":"You can create a new version from a string. Then access each field","output":"local v = Version(\"1.2.10\")","source":"docs","sourceUrl":"https://www.aseprite.org/api/version#version","user":"dev"}
{"instruction":"Returns the first number of the version.","output":"local v = Version(\"1.2.9\")\nassert(v.major == 1)\n\nv = Version(\"2\")\nassert(v.major == 2)","source":"docs","sourceUrl":"https://www.aseprite.org/api/version#versionmajor","user":"dev"}
{"instruction":"Returns the second number of the version.","output":"local v = Version(\"1.2.9\")\nassert(v.minor == 2)\n\nv = Version(\"2\")\nassert(v.minor == 0)","source":"docs","sourceUrl":"https://www.aseprite.org/api/version#versionminor","user":"dev"}
{"instruction":"Returns the third number of the version.","output":"local v = Version(\"1.2.9\")\nassert(v.patch == 9)\n\nv = Version(\"2\")\nassert(v.patch == 0)","source":"docs","sourceUrl":"https://www.aseprite.org/api/version#versionpatch","user":"dev"}
{"instruction":"Returns the pre-release label/keyword. For official releases it's an empty string, in other cases it might be \"alpha\", \"beta\", \"dev\", etc.","output":"local v = Version(\"1.2.10-beta4\")\nassert(v.prereleaseLabel == \"beta\")\n\nv = Version(\"2\")\nassert(v.prereleaseLabel == \"\")","source":"docs","sourceUrl":"https://www.aseprite.org/api/version#versionprereleaselabel","user":"dev"}
{"instruction":"Returns the pre-release version.","output":"local v = Version(\"1.2.10-beta4\")\nassert(v.prereleaseNumber == 4)\n\nv = Version(\"2\")\nassert(v.prereleaseNumber == 0)","source":"docs","sourceUrl":"https://www.aseprite.org/api/version#versionprereleasenumber","user":"dev"}
{"instruction":"Creates a websocket client that can be used to communicate with another program:\n\nurl specifies the server to connect.\ndeflate option enables compression before sending the data - if the server is running on the same machine, it might be faster to turn it off.\nonreceive function will be called for every incoming message, and when the connection is established and broken. Its two arguments are the event type (see WebSocketMessageType) and the received data (a string, can be empty).\nminreconnectwait and maxreconnectwait (in seconds) are optional values that limit the waiting time to try a reconnection to the server.","output":"local ws = WebSocket()\nlocal ws = WebSocket{\n    url = string,\n    onreceive = function(message, data),\n    deflate = bool,\n    minreconnectwait=number,\n    maxreconnectwait=number\n}","source":"docs","sourceUrl":"https://www.aseprite.org/api/websocket#websocket","user":"dev"}
{"instruction":"create webosocket connection","output":"local function handleMessage(mt, data)\n  if mt == WebSocketMessageType.OPEN then\n    print(\"Connection open. Sending a message...\")\n    ws:sendText(\"Hello!\")\n\n  elseif mt == WebSocketMessageType.TEXT then\n    print(\"Message recived: \" .. data)\n    ws:close()\n\n  elseif mt == WebSocketMessageType.CLOSE then\n    print(\"Connection closed\")\n  end\nend\n\nlocal ws = WebSocket{\n    onreceive = handleMessage,\n    url = \"http://127.0.0.1:9000\",\n    deflate = false\n}","source":"docs","sourceUrl":"https://www.aseprite.org/api/websocket#websocket","user":"user"}
{"instruction":"Address of the server. Read-only, the url is specified when creating the websocket.","output":"local server = ws.url","source":"docs","sourceUrl":"https://www.aseprite.org/api/websocket#websocketurl","user":"dev"}
{"instruction":"Try connecting to the server. After a successful connection, onreceive function will be called with message type WebSocketMessageType.OPEN. When the server or network breaks the connection, the client tries reconnecting automatically.","output":"WebSocket:connect()","source":"docs","sourceUrl":"https://www.aseprite.org/api/websocket#websocketconnect","user":"dev"}
{"instruction":"Disconnects from the server. After a disconnect, onreceive function will be called with message type WebSocketMessageType.CLOSE.","output":"WebSocket:close()","source":"docs","sourceUrl":"https://www.aseprite.org/api/websocket#websocketclose","user":"dev"}
{"instruction":"Sends a text message to the server. If multiple strings are passed, they will be joined together.","output":"WebSocket:sendText(str1, str2, ...)","source":"docs","sourceUrl":"https://www.aseprite.org/api/websocket#websocketsendtext","user":"dev"}
{"instruction":"Sends a binary message to the server. If multiple strings are passed, they will be joined together. Lua makes no distinction between character and byte strings, but the websocket protocol does label them.","output":"WebSocket:sendBinary(bstr1, bstr2, ...)","source":"docs","sourceUrl":"https://www.aseprite.org/api/websocket#websocketsendbinary","user":"dev"}
{"instruction":"Sends a very short ping message to the server. There's a limit to the length of data that can be sent. It's sometimes used to prevent the connection from timing out and closing. A standard compliant server will reply to every \"ping\" message with a \"pong\". Client pongs are sent automatically, and there's no need to control that.","output":"WebSocket:sendPing(str)","source":"docs","sourceUrl":"https://www.aseprite.org/api/websocket#websocketsendping","user":"dev"}
{"instruction":"Returns the width of the main window.","output":"local width = app.window.width","source":"docs","sourceUrl":"https://www.aseprite.org/api/window#windowwidth","user":"dev"}
{"instruction":"Returns the height of the main window.","output":"local height = app.window.height","source":"docs","sourceUrl":"https://www.aseprite.org/api/window#windowheight","user":"dev"}
{"instruction":"Returns the Events object to associate functions that can act like listeners of specific Window events. \n\nAvailable events for a Window:\n\n'resize': When the user resizes the window.","output":"app.window.events:on('resize',\n  function(ev)\n    print('Now the main window is', ev.width, ev.height)\n  end)","source":"docs","sourceUrl":"https://www.aseprite.org/api/window#windowevents","user":"dev"}
